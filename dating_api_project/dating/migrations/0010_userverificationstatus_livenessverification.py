# Generated by Django 4.2.7 on 2025-10-01 12:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dating', '0009_user_address_user_age_range_max_user_age_range_min_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserVerificationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('liveness_verified', models.BooleanField(default=False)),
                ('identity_verified', models.BooleanField(default=False)),
                ('verification_level', models.CharField(choices=[('none', 'Not Verified'), ('email', 'Email Verified'), ('phone', 'Phone Verified'), ('liveness', 'Liveness Verified'), ('full', 'Fully Verified')], default='none', max_length=20)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('phone_verified_at', models.DateTimeField(blank=True, null=True)),
                ('liveness_verified_at', models.DateTimeField(blank=True, null=True)),
                ('verified_badge', models.BooleanField(default=False, help_text='Show verified badge on profile')),
                ('trusted_member', models.BooleanField(default=False, help_text='Trusted member status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Verification Status',
                'verbose_name_plural': 'User Verification Statuses',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='LivenessVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('passed', 'Passed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('actions_required', models.JSONField(default=list, help_text='List of actions user must perform')),
                ('actions_completed', models.JSONField(default=list, help_text='List of actions user completed')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence score (0-100)')),
                ('face_quality_score', models.FloatField(default=0.0, help_text='Face quality score (0-100)')),
                ('is_live_person', models.BooleanField(default=False)),
                ('spoof_detected', models.BooleanField(default=False)),
                ('spoof_type', models.CharField(blank=True, help_text='Type of spoof detected', max_length=50, null=True)),
                ('video_url', models.URLField(blank=True, help_text='URL to verification video', null=True)),
                ('images_data', models.JSONField(default=dict, help_text='URLs or data for verification images')),
                ('verification_method', models.CharField(default='video', help_text='video, images, or session', max_length=50)),
                ('provider', models.CharField(default='internal', help_text='AWS, FacePlusPlus, Azure, internal', max_length=50)),
                ('provider_response', models.JSONField(default=dict, help_text='Full response from verification provider')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('attempts_count', models.PositiveIntegerField(default=1)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liveness_checks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='dating_live_user_id_0c29b8_idx'), models.Index(fields=['session_id'], name='dating_live_session_68d08f_idx'), models.Index(fields=['started_at'], name='dating_live_started_7ca0da_idx')],
            },
        ),
    ]
