# Generated by Django 4.2.7 on 2025-10-04 16:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dating', '0018_message_tip_amount_message_tip_gift_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay'), ('bank_transfer', 'Bank Transfer'), ('crypto', 'Cryptocurrency')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='Processing fee percentage', max_digits=5)),
                ('min_amount', models.DecimalField(decimal_places=2, default=1.0, help_text='Minimum transaction amount', max_digits=10)),
                ('max_amount', models.DecimalField(decimal_places=2, default=10000.0, help_text='Maximum transaction amount', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('subscription', 'Subscription Purchase'), ('bondcoin_purchase', 'Bondcoin Purchase'), ('refund', 'Refund')], max_length=20)),
                ('amount_usd', models.DecimalField(decimal_places=2, help_text='Amount in USD', max_digits=10)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Processing fee amount', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount including fees', max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('provider', models.CharField(blank=True, help_text='Payment provider (stripe, paypal, etc.)', max_length=50, null=True)),
                ('provider_transaction_id', models.CharField(blank=True, help_text='External provider transaction ID', max_length=255, null=True)),
                ('provider_response', models.JSONField(blank=True, help_text='Provider response data', null=True)),
                ('description', models.CharField(help_text='Transaction description', max_length=255)),
                ('metadata', models.JSONField(blank=True, help_text='Additional transaction metadata', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('bondcoin_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='dating.bondcointransaction')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dating.paymentmethod')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='dating.usersubscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(help_text='Payment provider (stripe, paypal, etc.)', max_length=50)),
                ('event_type', models.CharField(help_text='Webhook event type', max_length=100)),
                ('event_id', models.CharField(help_text='Provider event ID', max_length=255, unique=True)),
                ('payload', models.JSONField(help_text='Webhook payload data')),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='dating.paymenttransaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['is_active'], name='dating_paym_is_acti_4635f1_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['provider', 'event_type'], name='dating_paym_provide_e504a7_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['processed', 'created_at'], name='dating_paym_process_8ef90a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='paymentwebhook',
            unique_together={('provider', 'event_id')},
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['user', 'status'], name='dating_paym_user_id_bbfd7b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['provider_transaction_id'], name='dating_paym_provide_9057a7_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['status', 'created_at'], name='dating_paym_status_e09868_idx'),
        ),
    ]
