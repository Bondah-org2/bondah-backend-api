# Generated by Django 4.2.7 on 2025-10-04 14:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dating', '0015_user_email_notifications_enabled_user_looking_for_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSocialHandle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('twitter', 'Twitter/X'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn'), ('tiktok', 'TikTok'), ('snapchat', 'Snapchat'), ('youtube', 'YouTube'), ('pinterest', 'Pinterest'), ('website', 'Personal Website'), ('other', 'Other')], help_text='Social media platform', max_length=50)),
                ('handle', models.CharField(help_text="User's handle or username on the platform", max_length=100)),
                ('url', models.URLField(blank=True, help_text='Optional direct URL to the profile', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_handles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['platform'],
                'indexes': [models.Index(fields=['user', 'platform'], name='dating_user_user_id_823bf1_idx')],
                'unique_together': {('user', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='UserSecurityQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('data_protection', 'How will you protect user data?'), ('scam_prevention', 'What actions will you take if you suspect a scam or fake profile?'), ('relationship_guidance', 'Do you also provide relationship guidance?'), ('matchmaking_evolution', 'How do you see matchmaking evolving in the 21st century?'), ('unique_skills', 'What unique skills set you apart?'), ('business_service', 'Do you run matchmaking as a business or community service?')], max_length=50)),
                ('response', models.TextField(help_text="User's response to the security question")),
                ('is_public', models.BooleanField(default=False, help_text='Whether this response is shown publicly')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'question_type'], name='dating_user_user_id_d8c793_idx')],
                'unique_together': {('user', 'question_type')},
            },
        ),
        migrations.CreateModel(
            name='DocumentVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport', 'Passport (Recommended)'), ('national_id', 'National ID Card'), ('drivers_license', "Driver's License")], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('front_image_url', models.URLField(blank=True, help_text='URL to front image of document', null=True)),
                ('back_image_url', models.URLField(blank=True, help_text='URL to back image of document', null=True)),
                ('extracted_data', models.JSONField(default=dict, help_text='Data extracted from document via OCR')),
                ('verification_score', models.FloatField(default=0.0, help_text='Verification confidence score (0-100)')),
                ('is_authentic', models.BooleanField(default=False, help_text='Whether document appears authentic')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection if applicable', null=True)),
                ('verification_service', models.CharField(default='internal', help_text='OCR/verification service used', max_length=50)),
                ('service_response', models.JSONField(default=dict, help_text='Raw response from verification service')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='dating_docu_user_id_7e6bd8_idx'), models.Index(fields=['status', 'uploaded_at'], name='dating_docu_status_302ec6_idx')],
            },
        ),
    ]
