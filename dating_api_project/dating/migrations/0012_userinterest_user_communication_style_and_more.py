# Generated by Django 4.2.7 on 2025-10-02 14:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dating', '0011_userroleselection_phoneverification_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('sports', 'Sports'), ('music', 'Music'), ('travel', 'Travel'), ('food', 'Food'), ('art', 'Art'), ('technology', 'Technology'), ('fitness', 'Fitness'), ('reading', 'Reading'), ('movies', 'Movies'), ('gaming', 'Gaming'), ('outdoor', 'Outdoor Activities'), ('other', 'Other')], max_length=50)),
                ('icon', models.CharField(blank=True, help_text='Icon name for UI', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='communication_style',
            field=models.CharField(blank=True, choices=[('direct', 'Direct'), ('romantic', 'Romantic'), ('playful', 'Playful'), ('reserved', 'Reserved')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='dating_type',
            field=models.CharField(blank=True, choices=[('casual', 'Casual Dating'), ('serious', 'Serious Relationship'), ('marriage', 'Marriage'), ('sugar', 'Sugar Relationship'), ('friends', 'Friends First')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='drinking_preference',
            field=models.CharField(blank=True, choices=[('never', 'Never'), ('occasionally', 'Occasionally'), ('regularly', 'Regularly'), ('quit', 'Quit')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='education_level',
            field=models.CharField(blank=True, choices=[('high_school', 'High School'), ('undergrad', 'Undergraduate'), ('bachelors', "Bachelor's Degree"), ('masters', "Master's Degree"), ('phd', 'PhD'), ('other', 'Other')], max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='exercise_frequency',
            field=models.CharField(blank=True, choices=[('never', 'Never'), ('1x_week', '1x/week'), ('2x_week', '2x/week'), ('3x_week', '3x/week'), ('4x_week', '4x/week'), ('5x_week', '5x/week'), ('daily', 'Daily')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='height',
            field=models.CharField(blank=True, help_text='Height in feet/inches or cm', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='hobbies',
            field=models.JSONField(default=list, help_text='List of hobbies and interests'),
        ),
        migrations.AddField(
            model_name='user',
            name='interests',
            field=models.JSONField(default=list, help_text='List of general interests'),
        ),
        migrations.AddField(
            model_name='user',
            name='kids_plans',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='kids_preference',
            field=models.CharField(blank=True, choices=[('want', 'Want Kids'), ('dont_want', "Don't Want Kids"), ('have_kids', 'Have Kids'), ('open', 'Open to Kids')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='languages',
            field=models.JSONField(default=list, help_text="Languages spoken (e.g., ['English', 'French'])"),
        ),
        migrations.AddField(
            model_name='user',
            name='love_language',
            field=models.CharField(blank=True, choices=[('physical_touch', 'Physical Touch'), ('gifts', 'Gifts'), ('quality_time', 'Quality Time'), ('words_of_affirmation', 'Words of Affirmation'), ('acts_of_service', 'Acts of Service')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='marriage_plans',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='open_to_long_distance',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='personality_type',
            field=models.CharField(blank=True, choices=[('INTJ', 'INTJ'), ('INTP', 'INTP'), ('ENTJ', 'ENTJ'), ('ENTP', 'ENTP'), ('INFJ', 'INFJ'), ('INFP', 'INFP'), ('ENFJ', 'ENFJ'), ('ENFP', 'ENFP'), ('ISTJ', 'ISTJ'), ('ISFJ', 'ISFJ'), ('ESTJ', 'ESTJ'), ('ESFJ', 'ESFJ'), ('ISTP', 'ISTP'), ('ISFP', 'ISFP'), ('ESTP', 'ESTP'), ('ESFP', 'ESFP')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='pet_preference',
            field=models.CharField(blank=True, choices=[('dog', 'Dog'), ('cat', 'Cat'), ('both', 'Both'), ('none', 'None'), ('other', 'Other')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_gallery',
            field=models.JSONField(default=list, help_text='Array of additional profile picture URLs'),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_picture',
            field=models.URLField(blank=True, help_text='Main profile picture URL', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='relationship_status',
            field=models.CharField(blank=True, choices=[('single', 'Single'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('separated', 'Separated')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='religion',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='religion_importance',
            field=models.CharField(blank=True, choices=[('very', 'Very Important'), ('somewhat', 'Somewhat Important'), ('not_important', 'Not Important')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='smoking_preference',
            field=models.CharField(blank=True, choices=[('never', 'Never'), ('occasionally', 'Occasionally'), ('regularly', 'Regularly'), ('quit', 'Quit')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='zodiac_sign',
            field=models.CharField(blank=True, choices=[('aries', 'Aries'), ('taurus', 'Taurus'), ('gemini', 'Gemini'), ('cancer', 'Cancer'), ('leo', 'Leo'), ('virgo', 'Virgo'), ('libra', 'Libra'), ('scorpio', 'Scorpio'), ('sagittarius', 'Sagittarius'), ('capricorn', 'Capricorn'), ('aquarius', 'Aquarius'), ('pisces', 'Pisces')], max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('filters', models.JSONField(default=dict, help_text='Applied filters')),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfileView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(choices=[('search', 'Search Results'), ('discover', 'Discover Feed'), ('nearby', 'Nearby Users'), ('recommended', 'Recommended'), ('direct', 'Direct Link')], default='search', max_length=20)),
                ('viewed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_views_received', to=settings.AUTH_USER_MODEL)),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_views_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-viewed_at'],
                'unique_together': {('viewer', 'viewed_user')},
            },
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('super_like', 'Super Like'), ('pass', 'Pass'), ('block', 'Block'), ('report', 'Report'), ('request_live', 'Request Live'), ('share_profile', 'Share Profile')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional interaction data')),
                ('target_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_received', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'target_user', 'interaction_type')},
            },
        ),
        migrations.CreateModel(
            name='RecommendationEngine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Recommendation score (0-100)')),
                ('algorithm', models.CharField(choices=[('location_based', 'Location Based'), ('interest_based', 'Interest Based'), ('compatibility', 'Compatibility'), ('hybrid', 'Hybrid')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('recommended_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_to', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
                'unique_together': {('user', 'recommended_user')},
            },
        ),
    ]
