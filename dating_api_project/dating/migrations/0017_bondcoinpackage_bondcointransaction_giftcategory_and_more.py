# Generated by Django 4.2.7 on 2025-10-04 15:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dating', '0016_usersocialhandle_usersecurityquestion_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BondcoinPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., '10 Bondcoins'", max_length=100)),
                ('bondcoin_amount', models.PositiveIntegerField(help_text='Amount of Bondcoins in package')),
                ('price_usd', models.DecimalField(decimal_places=2, help_text='Price in USD', max_digits=10)),
                ('is_popular', models.BooleanField(default=False, help_text="Mark as 'Top Selling'")),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['bondcoin_amount'],
            },
        ),
        migrations.CreateModel(
            name='BondcoinTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('earn', 'Earn'), ('spend', 'Spend'), ('gift_sent', 'Gift Sent'), ('gift_received', 'Gift Received'), ('subscription', 'Subscription Purchase'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.IntegerField(help_text='Amount (positive for credit, negative for debit)')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='completed', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(help_text='Description shown in transaction history', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GiftCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Gift Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GiftTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_cost', models.PositiveIntegerField(help_text='Total cost in Bondcoins')),
                ('context_type', models.CharField(choices=[('chat', 'Chat Message'), ('profile', 'Profile'), ('live_session', 'Live Session'), ('general', 'General')], default='general', max_length=20)),
                ('context_id', models.PositiveIntegerField(blank=True, help_text='ID of related object (chat, live session, etc.)', null=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('received', 'Received'), ('failed', 'Failed')], default='sent', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Optional message with gift', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_cost', models.PositiveIntegerField(help_text='Total cost in Bondcoins')),
                ('chat_message', models.CharField(help_text='Message shown in live chat', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveJoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_role', models.CharField(choices=[('co_host', 'Co-Host'), ('speaker', 'Speaker')], default='co_host', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Optional message from requester', null=True)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('pro', 'Pro'), ('prime', 'Prime')], max_length=50, unique=True)),
                ('display_name', models.CharField(help_text="Display name like 'BONDAH Basic'", max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.CharField(choices=[('1_week', '1 Week'), ('1_month', '1 Month'), ('3_months', '3 Months'), ('6_months', '6 Months'), ('1_year', '1 Year')], default='1_month', max_length=20)),
                ('price_bondcoins', models.PositiveIntegerField(help_text='Price in Bondcoins')),
                ('price_usd', models.DecimalField(decimal_places=2, help_text='Price in USD', max_digits=10)),
                ('unlimited_swipes', models.BooleanField(default=False)),
                ('undo_swipes', models.BooleanField(default=False)),
                ('unlimited_unwind', models.BooleanField(default=False)),
                ('global_access', models.BooleanField(default=False)),
                ('read_receipt', models.BooleanField(default=False)),
                ('live_hours_days', models.PositiveIntegerField(default=7, help_text='Live hours in days')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['price_bondcoins'],
            },
        ),
        migrations.AddField(
            model_name='livesession',
            name='subject_matter',
            field=models.CharField(blank=True, help_text="Subject matter like 'Speed Dating'", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='bondcoin_balance',
            field=models.PositiveIntegerField(default=0, help_text="User's Bondcoin balance"),
        ),
        migrations.CreateModel(
            name='VirtualGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Rose Charm', 'Diamond Ring'", max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon_url', models.URLField(help_text='URL to gift icon/image')),
                ('cost_bondcoins', models.PositiveIntegerField(help_text='Cost in Bondcoins')),
                ('is_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gifts', to='dating.giftcategory')),
            ],
            options={
                'ordering': ['category', 'cost_bondcoins'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('pending', 'Pending')], default='active', max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('payment_method', models.CharField(default='bondcoin', help_text='bondcoin, credit_card, etc.', max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('auto_renew', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dating.subscriptionplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='subscriptionplan',
            index=models.Index(fields=['name', 'is_active'], name='dating_subs_name_97bc40_idx'),
        ),
        migrations.AddField(
            model_name='livejoinrequest',
            name='requester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_join_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='livejoinrequest',
            name='responded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='live_requests_responded', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='livejoinrequest',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='dating.livesession'),
        ),
        migrations.AddField(
            model_name='livegift',
            name='bondcoin_transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dating.bondcointransaction'),
        ),
        migrations.AddField(
            model_name='livegift',
            name='gift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dating.virtualgift'),
        ),
        migrations.AddField(
            model_name='livegift',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_gifts_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='livegift',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_gifts', to='dating.livesession'),
        ),
        migrations.AddField(
            model_name='gifttransaction',
            name='bondcoin_transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dating.bondcointransaction'),
        ),
        migrations.AddField(
            model_name='gifttransaction',
            name='gift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dating.virtualgift'),
        ),
        migrations.AddField(
            model_name='gifttransaction',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gifts_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gifttransaction',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gifts_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bondcointransaction',
            name='gift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dating.virtualgift'),
        ),
        migrations.AddField(
            model_name='bondcointransaction',
            name='package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dating.bondcoinpackage'),
        ),
        migrations.AddField(
            model_name='bondcointransaction',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dating.usersubscription'),
        ),
        migrations.AddField(
            model_name='bondcointransaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bondcoin_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='bondcoinpackage',
            index=models.Index(fields=['is_active', 'bondcoin_amount'], name='dating_bond_is_acti_0bfa3a_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualgift',
            index=models.Index(fields=['category', 'is_active'], name='dating_virt_categor_bd6841_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['user', 'status'], name='dating_user_user_id_19e214_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['end_date'], name='dating_user_end_dat_e077ed_idx'),
        ),
        migrations.AddIndex(
            model_name='livejoinrequest',
            index=models.Index(fields=['session', 'status'], name='dating_live_session_07706a_idx'),
        ),
        migrations.AddIndex(
            model_name='livejoinrequest',
            index=models.Index(fields=['requester', 'status'], name='dating_live_request_51f45d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='livejoinrequest',
            unique_together={('session', 'requester')},
        ),
        migrations.AddIndex(
            model_name='livegift',
            index=models.Index(fields=['session', 'created_at'], name='dating_live_session_41e9e2_idx'),
        ),
        migrations.AddIndex(
            model_name='livegift',
            index=models.Index(fields=['sender', 'created_at'], name='dating_live_sender__debd9d_idx'),
        ),
        migrations.AddIndex(
            model_name='gifttransaction',
            index=models.Index(fields=['sender', 'created_at'], name='dating_gift_sender__d41450_idx'),
        ),
        migrations.AddIndex(
            model_name='gifttransaction',
            index=models.Index(fields=['recipient', 'created_at'], name='dating_gift_recipie_8e3668_idx'),
        ),
        migrations.AddIndex(
            model_name='gifttransaction',
            index=models.Index(fields=['context_type', 'context_id'], name='dating_gift_context_f33922_idx'),
        ),
        migrations.AddIndex(
            model_name='bondcointransaction',
            index=models.Index(fields=['user', 'transaction_type'], name='dating_bond_user_id_310557_idx'),
        ),
        migrations.AddIndex(
            model_name='bondcointransaction',
            index=models.Index(fields=['status', 'created_at'], name='dating_bond_status_c0aec4_idx'),
        ),
    ]
