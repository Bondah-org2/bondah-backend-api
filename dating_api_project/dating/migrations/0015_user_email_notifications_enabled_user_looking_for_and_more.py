# Generated by Django 4.2.7 on 2025-10-04 14:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dating', '0014_post_postcomment_story_postshare_postreport_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='email_notifications_enabled',
            field=models.BooleanField(default=True, help_text='Enable email notifications'),
        ),
        migrations.AddField(
            model_name='user',
            name='looking_for',
            field=models.TextField(blank=True, help_text='Free text describing what the user is looking for', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='preferred_language',
            field=models.CharField(default='en', help_text="User's preferred app language", max_length=10),
        ),
        migrations.AddField(
            model_name='user',
            name='push_notifications_enabled',
            field=models.BooleanField(default=True, help_text='Enable push notifications'),
        ),
        migrations.CreateModel(
            name='LiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Title of the live session', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the live session', null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='When the live session started')),
                ('end_time', models.DateTimeField(blank=True, help_text='When the live session ended', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('scheduled', 'Scheduled'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('duration_limit_minutes', models.PositiveIntegerField(default=60, help_text='Maximum duration in minutes')),
                ('viewers_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('stream_url', models.URLField(blank=True, help_text='URL for the live stream', null=True)),
                ('thumbnail_url', models.URLField(blank=True, help_text='Thumbnail URL for the live session', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='LiveParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(choices=[('viewer', 'Viewer'), ('co_host', 'Co-Host'), ('speaker', 'Speaker')], default='viewer', max_length=20)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='dating.livesession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['joined_at'],
            },
        ),
        migrations.AddIndex(
            model_name='livesession',
            index=models.Index(fields=['user', 'status'], name='dating_live_user_id_a1cd68_idx'),
        ),
        migrations.AddIndex(
            model_name='livesession',
            index=models.Index(fields=['status', 'start_time'], name='dating_live_status_45205e_idx'),
        ),
        migrations.AddIndex(
            model_name='liveparticipant',
            index=models.Index(fields=['session', 'user'], name='dating_live_session_dd8afa_idx'),
        ),
        migrations.AddIndex(
            model_name='liveparticipant',
            index=models.Index(fields=['user', 'joined_at'], name='dating_live_user_id_de63af_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='liveparticipant',
            unique_together={('session', 'user')},
        ),
    ]
