openapi: 3.0.3
info:
  title: Bondah Dating API
  version: 1.0.0
  x-logo:
    url: https://bondah-backend-api-production.up.railway.app/static/admin/img/icon-hires.svg
    altText: Bondah Dating API
  description: "\n    # \U0001F680 Bondah Dating API Documentation\n    \n    ## Overview\n\
    \    Comprehensive dating platform API with advanced features including:\n   \
    \ - User Authentication & OAuth Integration\n    - Real-time Chat & Video Calling\n\
    \    - Social Feed & Stories\n    - Live Streaming & Virtual Gifting\n    - Advanced\
    \ Matching & Discovery\n    - Subscription Plans & Payment Processing\n    - Location-based\
    \ Services\n    - Document Verification & Security\n    \n    ## Authentication\n\
    \    Most endpoints require JWT authentication. Include the access token in the\
    \ Authorization header:\n    ```\n    Authorization: Bearer <your-access-token>\n\
    \    ```\n    \n    ## Base URL\n    - **Production**: https://bondah-backend-api-production.up.railway.app/api/\n\
    \    - **Development**: http://localhost:8000/api/\n    \n    ## Features\n  \
    \  - \U0001F510 **Authentication**: JWT, OAuth (Google, Apple), Social Login\n\
    \    - \U0001F4AC **Communication**: Real-time chat, voice/video calls, messaging\n\
    \    - \U0001F4F1 **Social**: Feed, stories, posts, comments, reactions\n    -\
    \ \U0001F381 **Monetization**: Subscriptions, virtual gifts, Bondcoins\n    -\
    \ \U0001F4CD **Location**: GPS tracking, nearby users, location-based matching\n\
    \    - \U0001F3A5 **Live Streaming**: Live sessions, audience interaction, gifts\n\
    \    - \U0001F512 **Security**: Document verification, facial recognition, OTP\n\
    \    - \U0001F3AF **Matching**: AI-powered recommendations, advanced filters\n\
    \    "
paths:
  /create-user/:
    post:
      operationId: create_user_create
      tags:
      - create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /newsletter/signup/:
    post:
      operationId: newsletter_signup_create
      tags:
      - newsletter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsletterSubscriberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsletterSubscriberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsletterSubscriberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterSubscriber'
          description: ''
  /newsletter/subscribe/:
    post:
      operationId: newsletter_subscribe_create
      tags:
      - newsletter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsletterSubscriberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsletterSubscriberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsletterSubscriberRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterSubscriber'
          description: ''
  /puzzle/:
    post:
      operationId: puzzle_create
      tags:
      - puzzle
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /puzzle/verify/:
    post:
      operationId: puzzle_verify_create
      tags:
      - puzzle
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /coins/earn/:
    post:
      operationId: coins_earn_create
      tags:
      - coins
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /coins/spend/:
    post:
      operationId: coins_spend_create
      tags:
      - coins
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /waitlist/:
    post:
      operationId: waitlist_create
      description: Join the waitlist
      tags:
      - waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waitlist'
          description: ''
  /email/send-newsletter-welcome/:
    post:
      operationId: email_send_newsletter_welcome_create
      tags:
      - email
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /email/send-waitlist-confirmation/:
    post:
      operationId: email_send_waitlist_confirmation_create
      tags:
      - email
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /email/send/:
    post:
      operationId: email_send_create
      tags:
      - email
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /jobs/:
    get:
      operationId: jobs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobListList'
          description: ''
  /jobs/{id}/:
    get:
      operationId: jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetail'
          description: ''
  /jobs/apply/:
    post:
      operationId: jobs_apply_create
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplicationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplicationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
  /jobs/options/:
    get:
      operationId: jobs_options_retrieve
      description: Get available job categories and types
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /translate/:
    post:
      operationId: translate_create
      tags:
      - translate
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /translate/languages/:
    get:
      operationId: translate_languages_retrieve
      tags:
      - translate
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /translate/history/:
    get:
      operationId: translate_history_retrieve
      tags:
      - translate
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /translate/stats/:
    get:
      operationId: translate_stats_retrieve
      tags:
      - translate
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/login/:
    post:
      operationId: admin_login_create
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/verify-otp/:
    post:
      operationId: admin_verify_otp_create
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/refresh-token/:
    post:
      operationId: admin_refresh_token_create
      description: Refresh access token
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/logout/:
    post:
      operationId: admin_logout_create
      description: Logout and revoke refresh token
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/verify-token/:
    get:
      operationId: admin_verify_token_retrieve
      description: Verify token and return admin info
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/debug-auth/:
    get:
      operationId: admin_debug_auth_retrieve
      description: Debug authentication headers and token
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/jobs/:
    get:
      operationId: admin_jobs_retrieve
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/jobs/create/:
    post:
      operationId: admin_jobs_create_create
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/jobs/{job_id}/update/:
    put:
      operationId: admin_jobs_update_update
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/applications/:
    get:
      operationId: admin_applications_retrieve
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/applications/{application_id}/:
    get:
      operationId: admin_applications_retrieve_2
      description: Get detailed view of a specific job application
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/applications/{application_id}/status/:
    put:
      operationId: admin_applications_status_update
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/waitlist/:
    get:
      operationId: admin_waitlist_retrieve
      description: Get all waitlist entries
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /admin/newsletter/:
    get:
      operationId: admin_newsletter_retrieve
      description: Get all newsletter subscribers
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/register/:
    post:
      operationId: auth_register_create
      description: User registration for mobile app
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/login/:
    post:
      operationId: auth_login_create
      description: User login for mobile app
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: User logout for mobile app
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: Refresh JWT token for mobile app
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/password-reset/:
    post:
      operationId: auth_password_reset_create
      description: Password reset request for mobile app
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/password-reset-confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: Password reset confirmation for mobile app
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/profile/:
    get:
      operationId: auth_profile_retrieve
      description: Get user profile
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: auth_profile_update
      description: Update user profile
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/deactivate/:
    post:
      operationId: auth_deactivate_create
      description: Deactivate the current user's account
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/notifications/:
    get:
      operationId: auth_notifications_retrieve
      description: Get current notification settings
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: auth_notifications_update
      description: Update notification settings
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/language/:
    get:
      operationId: auth_language_retrieve
      description: Get current language settings
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: auth_language_update
      description: Update language settings
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/device-register/:
    post:
      operationId: auth_device_register_create
      description: Register device for push notifications
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /oauth/google/:
    post:
      operationId: oauth_google_create
      description: Google OAuth login for mobile app
      tags:
      - oauth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /oauth/apple/:
    post:
      operationId: oauth_apple_create
      description: Apple Sign-In for mobile app
      tags:
      - oauth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /oauth/social-login/:
    post:
      operationId: oauth_social_login_create
      description: Unified social login endpoint (Google/Apple)
      tags:
      - oauth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /oauth/link-account/:
    post:
      operationId: oauth_link_account_create
      description: Link social account to existing user
      tags:
      - oauth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /oauth/unlink-account/{provider}/:
    delete:
      operationId: oauth_unlink_account_destroy
      description: Unlink social account from user
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      tags:
      - oauth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /oauth/social-accounts/:
    get:
      operationId: oauth_social_accounts_retrieve
      description: List user's linked social accounts
      tags:
      - oauth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /liveness/start/:
    post:
      operationId: liveness_start_create
      description: |-
        Start a new liveness verification session

        POST /api/liveness/start/
      tags:
      - liveness
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /liveness/submit/video/:
    post:
      operationId: liveness_submit_video_create
      description: |-
        Submit video for liveness verification

        POST /api/liveness/submit/video/
        Body: {
            "session_id": "uuid",
            "video_data": "base64_encoded_video",
            "format": "mp4/webm/mov"
        }
      tags:
      - liveness
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /liveness/submit/images/:
    post:
      operationId: liveness_submit_images_create
      description: |-
        Submit multiple images for liveness verification (alternative to video)

        POST /api/liveness/submit/images/
        Body: {
            "session_id": "uuid",
            "images": [
                {"action": "turn_left", "image_data": "base64..."},
                {"action": "turn_right", "image_data": "base64..."},
                {"action": "open_mouth", "image_data": "base64..."}
            ]
        }
      tags:
      - liveness
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /liveness/status/{session_id}/:
    get:
      operationId: liveness_status_retrieve
      description: |-
        Get status of a liveness check session

        GET /api/liveness/status/<session_id>/
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
        required: true
      tags:
      - liveness
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /liveness/retry/:
    post:
      operationId: liveness_retry_create
      description: |-
        Retry a failed liveness check

        POST /api/liveness/retry/
        Body: {"session_id": "uuid"}
      tags:
      - liveness
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /verification/status/:
    get:
      operationId: verification_status_retrieve
      description: |-
        Get user's overall verification status

        GET /api/verification/status/
      tags:
      - verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /verification/email/request/:
    post:
      operationId: verification_email_request_create
      description: Request email OTP for verification
      tags:
      - verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /verification/email/verify/:
    post:
      operationId: verification_email_verify_create
      description: Verify email OTP
      tags:
      - verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /verification/phone/request/:
    post:
      operationId: verification_phone_request_create
      description: Request phone OTP for verification
      tags:
      - verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /verification/phone/verify/:
    post:
      operationId: verification_phone_verify_create
      description: Verify phone OTP
      tags:
      - verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /verification/resend/:
    post:
      operationId: verification_resend_create
      description: Resend OTP for email or phone verification
      tags:
      - verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /onboarding/role/:
    get:
      operationId: onboarding_role_retrieve
      description: Get user's current role selection
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: onboarding_role_create
      description: Handle user role selection during onboarding
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /search/users/:
    get:
      operationId: search_users_retrieve
      description: Advanced user search with filtering capabilities
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /users/{user_id}/profile/:
    get:
      operationId: users_profile_retrieve
      description: Get detailed user profile for viewing
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /users/interact/:
    post:
      operationId: users_interact_create
      description: Handle user interactions (like, dislike, super like, etc.)
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /users/recommendations/:
    get:
      operationId: users_recommendations_retrieve
      description: Get personalized user recommendations
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /users/category/:
    get:
      operationId: users_category_retrieve
      description: Get users by category (Casual Dating, LGBTQ+, Sugar, etc.)
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /users/interests/:
    get:
      operationId: users_interests_retrieve
      description: Manage user interests and hobbies
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: users_interests_create
      description: Update user's interests
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/update/:
    post:
      operationId: location_update_create
      description: Update user's current location
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/geocode/:
    post:
      operationId: location_geocode_create
      description: Convert address to GPS coordinates
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/privacy/:
    put:
      operationId: location_privacy_update
      description: Update user's location privacy settings
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/permissions/:
    get:
      operationId: location_permissions_retrieve
      description: Manage user's location permissions
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: location_permissions_update
      description: Manage user's location permissions
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/history/:
    get:
      operationId: location_history_retrieve
      description: Get user's location history
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/nearby-users/:
    get:
      operationId: location_nearby_users_retrieve
      description: Find nearby users for matching
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/match-preferences/:
    get:
      operationId: location_match_preferences_retrieve
      description: Update user's matching preferences
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: location_match_preferences_update
      description: Update user's matching preferences
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/profile/:
    get:
      operationId: location_profile_retrieve
      description: Get user profile with location information
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /location/statistics/:
    get:
      operationId: location_statistics_retrieve
      description: Get location-related statistics (admin only)
      tags:
      - location
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /chat/:
    get:
      operationId: chat_list
      description: List all chats for the authenticated user or create a new chat
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatList'
          description: ''
    post:
      operationId: chat_create
      description: List all chats for the authenticated user or create a new chat
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCreate'
          description: ''
  /chat/{id}/:
    get:
      operationId: chat_retrieve
      description: Retrieve, update, or delete a specific chat
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDetail'
          description: ''
    put:
      operationId: chat_update
      description: Retrieve, update, or delete a specific chat
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatSettingsRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSettings'
          description: ''
    patch:
      operationId: chat_partial_update
      description: Retrieve, update, or delete a specific chat
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatSettingsRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSettings'
          description: ''
    delete:
      operationId: chat_destroy
      description: Retrieve, update, or delete a specific chat
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /chat/{chat_id}/messages/:
    get:
      operationId: chat_messages_list
      description: List messages for a specific chat or send a new message
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
    post:
      operationId: chat_messages_create
      description: List messages for a specific chat or send a new message
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageCreateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageCreate'
          description: ''
  /chat/{chat_id}/messages/{id}/:
    get:
      operationId: chat_messages_retrieve
      description: Retrieve, update, or delete a specific message
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: chat_messages_update
      description: Retrieve, update, or delete a specific message
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: chat_messages_partial_update
      description: Retrieve, update, or delete a specific message
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: chat_messages_destroy
      description: Retrieve, update, or delete a specific message
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /chat/{chat_id}/report/:
    post:
      operationId: chat_report_create
      description: Report a chat, message, or user
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatReport'
          description: ''
  /chat/{chat_id}/messages/{message_id}/report/:
    post:
      operationId: chat_messages_report_create
      description: Report a chat, message, or user
      parameters:
      - in: path
        name: chat_id
        schema:
          type: integer
        required: true
      - in: path
        name: message_id
        schema:
          type: integer
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatReport'
          description: ''
  /chat/matchmaker-intro/:
    post:
      operationId: chat_matchmaker_intro_create
      description: Create a matchmaker introduction chat between two users
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /calls/initiate/:
    post:
      operationId: calls_initiate_create
      description: Initiate a voice or video call
      tags:
      - calls
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /calls/{call_id}/answer/:
    post:
      operationId: calls_answer_create
      description: Answer an incoming call
      parameters:
      - in: path
        name: call_id
        schema:
          type: string
        required: true
      tags:
      - calls
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /calls/{call_id}/end/:
    post:
      operationId: calls_end_create
      description: End an active call
      parameters:
      - in: path
        name: call_id
        schema:
          type: string
        required: true
      tags:
      - calls
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /feed/:
    get:
      operationId: feed_list
      description: List posts in the Bond Story feed or create a new post
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: feed_create
      description: List posts in the Bond Story feed or create a new post
      tags:
      - feed
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
          description: ''
  /feed/posts/{id}/:
    get:
      operationId: feed_posts_retrieve
      description: Retrieve, update, or delete a specific post
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: feed_posts_update
      description: Retrieve, update, or delete a specific post
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - feed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
          description: ''
    patch:
      operationId: feed_posts_partial_update
      description: Retrieve, update, or delete a specific post
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - feed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostCreateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
          description: ''
    delete:
      operationId: feed_posts_destroy
      description: Retrieve, update, or delete a specific post
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /feed/posts/{post_id}/comments/:
    get:
      operationId: feed_posts_comments_list
      description: List comments for a specific post or add a new comment
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostCommentList'
          description: ''
    post:
      operationId: feed_posts_comments_create
      description: List comments for a specific post or add a new comment
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCommentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostComment'
          description: ''
  /feed/posts/{post_id}/interact/:
    post:
      operationId: feed_posts_interact_create
      description: Handle post interactions (like, share, bond)
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /feed/comments/{comment_id}/interact/:
    post:
      operationId: feed_comments_interact_create
      description: Handle comment interactions (like)
      parameters:
      - in: path
        name: comment_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /feed/posts/{post_id}/report/:
    post:
      operationId: feed_posts_report_create
      description: Report a post or comment
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReport'
          description: ''
  /feed/comments/{comment_id}/report/:
    post:
      operationId: feed_comments_report_create
      description: Report a post or comment
      parameters:
      - in: path
        name: comment_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReport'
          description: ''
  /feed/posts/{post_id}/share/:
    post:
      operationId: feed_posts_share_create
      description: Share a post to external platforms
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostShareRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostShareRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostShareRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostShare'
          description: ''
  /feed/stories/:
    get:
      operationId: feed_stories_list
      description: List active stories or create a new story
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStoryList'
          description: ''
    post:
      operationId: feed_stories_create
      description: List active stories or create a new story
      tags:
      - feed
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StoryCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StoryCreateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryCreate'
          description: ''
  /feed/stories/{id}/:
    get:
      operationId: feed_stories_retrieve
      description: Retrieve a specific story and mark as viewed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
  /feed/stories/{story_id}/react/:
    post:
      operationId: feed_stories_react_create
      description: Handle story reactions
      parameters:
      - in: path
        name: story_id
        schema:
          type: integer
        required: true
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /feed/search/:
    get:
      operationId: feed_search_retrieve
      description: Search posts in the Bond Story feed
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /feed/suggestions/:
    get:
      operationId: feed_suggestions_retrieve
      description: Get search suggestions for the Bond Story feed
      tags:
      - feed
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /live-sessions/:
    get:
      operationId: live_sessions_list
      description: List active live sessions or create a new live session
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLiveSessionList'
          description: ''
    post:
      operationId: live_sessions_create
      description: List active live sessions or create a new live session
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveSessionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveSessionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveSessionCreateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveSessionCreate'
          description: ''
  /live-sessions/{id}/:
    get:
      operationId: live_sessions_retrieve
      description: Retrieve, update, or end a specific live session
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveSession'
          description: ''
    put:
      operationId: live_sessions_update
      description: Retrieve, update, or end a specific live session
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveSessionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveSession'
          description: ''
    patch:
      operationId: live_sessions_partial_update
      description: Retrieve, update, or end a specific live session
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLiveSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLiveSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLiveSessionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveSession'
          description: ''
    delete:
      operationId: live_sessions_destroy
      description: Retrieve, update, or end a specific live session
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /live-sessions/{session_id}/join/:
    post:
      operationId: live_sessions_join_create
      description: Join a live session as a viewer
      parameters:
      - in: path
        name: session_id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /live-sessions/{session_id}/leave/:
    post:
      operationId: live_sessions_leave_create
      description: Leave a live session
      parameters:
      - in: path
        name: session_id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /social-handles/:
    get:
      operationId: social_handles_list
      description: List and create user social media handles
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - social-handles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSocialHandleList'
          description: ''
    post:
      operationId: social_handles_create
      description: List and create user social media handles
      tags:
      - social-handles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSocialHandleCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSocialHandleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSocialHandleCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSocialHandleCreate'
          description: ''
  /social-handles/{id}/:
    get:
      operationId: social_handles_retrieve
      description: Retrieve, update, or delete a specific social media handle
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - social-handles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSocialHandle'
          description: ''
    put:
      operationId: social_handles_update
      description: Retrieve, update, or delete a specific social media handle
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - social-handles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSocialHandleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSocialHandleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSocialHandleRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSocialHandle'
          description: ''
    patch:
      operationId: social_handles_partial_update
      description: Retrieve, update, or delete a specific social media handle
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - social-handles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSocialHandleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSocialHandleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSocialHandleRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSocialHandle'
          description: ''
    delete:
      operationId: social_handles_destroy
      description: Retrieve, update, or delete a specific social media handle
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - social-handles
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /security-questions/:
    get:
      operationId: security_questions_list
      description: List and create user security question responses
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - security-questions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSecurityQuestionList'
          description: ''
    post:
      operationId: security_questions_create
      description: List and create user security question responses
      tags:
      - security-questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSecurityQuestionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSecurityQuestionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSecurityQuestionCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSecurityQuestionCreate'
          description: ''
  /security-questions/{id}/:
    get:
      operationId: security_questions_retrieve
      description: Retrieve, update, or delete a specific security question response
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - security-questions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSecurityQuestion'
          description: ''
    put:
      operationId: security_questions_update
      description: Retrieve, update, or delete a specific security question response
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - security-questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSecurityQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSecurityQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSecurityQuestionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSecurityQuestion'
          description: ''
    patch:
      operationId: security_questions_partial_update
      description: Retrieve, update, or delete a specific security question response
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - security-questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSecurityQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSecurityQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSecurityQuestionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSecurityQuestion'
          description: ''
    delete:
      operationId: security_questions_destroy
      description: Retrieve, update, or delete a specific security question response
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - security-questions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /document-verification/:
    get:
      operationId: document_verification_list
      description: List and create document verification requests
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - document-verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentVerificationList'
          description: ''
    post:
      operationId: document_verification_create
      description: List and create document verification requests
      tags:
      - document-verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVerificationCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentVerificationCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentVerificationCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVerificationCreate'
          description: ''
  /document-verification/{id}/:
    get:
      operationId: document_verification_retrieve
      description: Retrieve, update, or delete a specific document verification
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - document-verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVerification'
          description: ''
    put:
      operationId: document_verification_update
      description: Retrieve, update, or delete a specific document verification
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - document-verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVerification'
          description: ''
    patch:
      operationId: document_verification_partial_update
      description: Retrieve, update, or delete a specific document verification
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - document-verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentVerificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVerification'
          description: ''
    delete:
      operationId: document_verification_destroy
      description: Retrieve, update, or delete a specific document verification
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - document-verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /document-verification/upload/:
    post:
      operationId: document_verification_upload_create
      description: Upload document images
      tags:
      - document-verification
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /username/validate/:
    post:
      operationId: username_validate_create
      description: Validate username
      tags:
      - username
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /username/update/:
    put:
      operationId: username_update_update
      description: Update username
      tags:
      - username
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /subscriptions/plans/:
    get:
      operationId: subscriptions_plans_list
      description: List all available subscription plans
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionPlanList'
          description: ''
  /subscriptions/:
    get:
      operationId: subscriptions_list
      description: List and create user subscriptions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSubscriptionList'
          description: ''
    post:
      operationId: subscriptions_create
      description: List and create user subscriptions
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSubscriptionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSubscriptionCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscriptionCreate'
          description: ''
  /subscriptions/{id}/:
    get:
      operationId: subscriptions_retrieve
      description: Retrieve, update, or delete a specific user subscription
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
    put:
      operationId: subscriptions_update
      description: Retrieve, update, or delete a specific user subscription
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSubscriptionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
    patch:
      operationId: subscriptions_partial_update
      description: Retrieve, update, or delete a specific user subscription
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSubscriptionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
    delete:
      operationId: subscriptions_destroy
      description: Retrieve, update, or delete a specific user subscription
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /subscriptions/current/:
    get:
      operationId: subscriptions_current_retrieve
      description: Get user's current active subscription
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /subscriptions/feature-access/:
    get:
      operationId: subscriptions_feature_access_retrieve
      description: Check user's access to specific features
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /bondcoin/packages/:
    get:
      operationId: bondcoin_packages_list
      description: List all available Bondcoin packages
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - bondcoin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBondcoinPackageList'
          description: ''
  /bondcoin/balance/:
    get:
      operationId: bondcoin_balance_retrieve
      description: Get user's Bondcoin balance
      tags:
      - bondcoin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /bondcoin/transactions/:
    get:
      operationId: bondcoin_transactions_list
      description: List user's Bondcoin transactions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - bondcoin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBondcoinTransactionList'
          description: ''
  /bondcoin/transactions/{id}/:
    get:
      operationId: bondcoin_transactions_retrieve
      description: Retrieve a specific Bondcoin transaction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - bondcoin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BondcoinTransaction'
          description: ''
  /bondcoin/purchase/:
    post:
      operationId: bondcoin_purchase_create
      description: Purchase Bondcoins
      tags:
      - bondcoin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /gifts/categories/:
    get:
      operationId: gifts_categories_list
      description: List all gift categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gifts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGiftCategoryList'
          description: ''
  /gifts/:
    get:
      operationId: gifts_list
      description: List virtual gifts, optionally filtered by category
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gifts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVirtualGiftList'
          description: ''
  /gifts/{id}/:
    get:
      operationId: gifts_retrieve
      description: Retrieve a specific virtual gift
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - gifts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualGift'
          description: ''
  /gifts/transactions/:
    get:
      operationId: gifts_transactions_list
      description: List user's gift transactions (sent and received)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gifts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGiftTransactionList'
          description: ''
  /gifts/send/:
    post:
      operationId: gifts_send_create
      description: Send a virtual gift to another user
      tags:
      - gifts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /live-sessions/gifts/:
    get:
      operationId: live_sessions_gifts_list
      description: List and send gifts in live sessions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLiveGiftList'
          description: ''
    post:
      operationId: live_sessions_gifts_create
      description: List and send gifts in live sessions
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveGiftCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveGiftCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveGiftCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveGiftCreate'
          description: ''
  /live-sessions/join-requests/:
    get:
      operationId: live_sessions_join_requests_list
      description: List and create live session join requests
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLiveJoinRequestList'
          description: ''
    post:
      operationId: live_sessions_join_requests_create
      description: List and create live session join requests
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJoinRequestCreate'
          description: ''
  /live-sessions/join-requests/{id}/:
    get:
      operationId: live_sessions_join_requests_retrieve
      description: Retrieve, update, or delete a specific live join request
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJoinRequest'
          description: ''
    put:
      operationId: live_sessions_join_requests_update
      description: Retrieve, update, or delete a specific live join request
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJoinRequest'
          description: ''
    patch:
      operationId: live_sessions_join_requests_partial_update
      description: Retrieve, update, or delete a specific live join request
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLiveJoinRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLiveJoinRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLiveJoinRequestRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJoinRequest'
          description: ''
    delete:
      operationId: live_sessions_join_requests_destroy
      description: Retrieve, update, or delete a specific live join request
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /live-sessions/join-requests/{id}/manage/:
    put:
      operationId: live_sessions_join_requests_manage_update
      description: Manage live session join requests (for hosts to approve/reject)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestManageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestManageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveJoinRequestManageRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJoinRequestManage'
          description: ''
    patch:
      operationId: live_sessions_join_requests_manage_partial_update
      description: Manage live session join requests (for hosts to approve/reject)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLiveJoinRequestManageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLiveJoinRequestManageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLiveJoinRequestManageRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJoinRequestManage'
          description: ''
  /live-sessions/{session_id}/gifters/:
    get:
      operationId: live_sessions_gifters_retrieve
      description: Get top gifters for a live session
      parameters:
      - in: path
        name: session_id
        schema:
          type: integer
        required: true
      tags:
      - live-sessions
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /payments/methods/:
    get:
      operationId: payments_methods_list
      description: List available payment methods
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
  /payments/transactions/:
    get:
      operationId: payments_transactions_list
      description: List user's payment transactions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentTransactionList'
          description: ''
  /payments/transactions/{id}/:
    get:
      operationId: payments_transactions_retrieve
      description: Retrieve a specific payment transaction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransaction'
          description: ''
  /payments/process/:
    post:
      operationId: payments_process_create
      description: Process payment for subscriptions or Bondcoin purchases
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /payments/webhooks/{provider}/:
    post:
      operationId: payments_webhooks_create
      description: Handle payment webhooks from external providers
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /payments/refund/{transaction_id}/:
    post:
      operationId: payments_refund_create
      description: Process refund for a payment transaction
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: integer
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    BondcoinPackage:
      type: object
      description: Serializer for Bondcoin packages
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: e.g., '10 Bondcoins'
          maxLength: 100
        bondcoin_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Amount of Bondcoins in package
        price_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price in USD
        is_popular:
          type: boolean
          description: Mark as 'Top Selling'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - bondcoin_amount
      - name
      - price_usd
    BondcoinTransaction:
      type: object
      description: Serializer for Bondcoin transactions
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        transaction_type:
          enum:
          - purchase
          - earn
          - spend
          - gift_sent
          - gift_received
          - subscription
          - refund
          type: string
          description: |-
            * `purchase` - Purchase
            * `earn` - Earn
            * `spend` - Spend
            * `gift_sent` - Gift Sent
            * `gift_received` - Gift Received
            * `subscription` - Subscription Purchase
            * `refund` - Refund
        amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Amount (positive for credit, negative for debit)
        status:
          enum:
          - pending
          - completed
          - failed
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `completed` - Completed
            * `failed` - Failed
            * `cancelled` - Cancelled
        package:
          type: integer
          nullable: true
        package_name:
          type: string
          readOnly: true
        subscription:
          type: integer
          nullable: true
        gift:
          type: integer
          nullable: true
        payment_method:
          type: string
          nullable: true
          maxLength: 50
        payment_reference:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          description: Description shown in transaction history
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - description
      - transaction_type
    Chat:
      type: object
      description: Serializer for chat list view
      properties:
        id:
          type: integer
          readOnly: true
        chat_type:
          enum:
          - direct
          - matchmaker_intro
          - group
          type: string
          description: |-
            * `direct` - Direct Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `group` - Group Chat
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ChatParticipant'
          readOnly: true
        other_participant:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_message_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_message:
          type: string
          readOnly: true
        unread_count:
          type: string
          readOnly: true
        is_active:
          type: boolean
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
        chat_theme:
          enum:
          - default
          - dark
          - light
          - colorful
          type: string
          description: |-
            * `default` - Default
            * `dark` - Dark
            * `light` - Light
            * `colorful` - Colorful
    ChatCreate:
      type: object
      description: Serializer for creating new chats
      properties:
        chat_type:
          enum:
          - direct
          - matchmaker_intro
          - group
          type: string
          description: |-
            * `direct` - Direct Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `group` - Group Chat
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
    ChatCreateRequest:
      type: object
      description: Serializer for creating new chats
      properties:
        chat_type:
          enum:
          - direct
          - matchmaker_intro
          - group
          type: string
          description: |-
            * `direct` - Direct Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `group` - Group Chat
        participant_ids:
          type: array
          items:
            type: integer
          writeOnly: true
          description: List of user IDs to include in the chat
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
      required:
      - participant_ids
    ChatDetail:
      type: object
      description: Serializer for a single chat with all its messages
      properties:
        id:
          type: integer
          readOnly: true
        chat_type:
          enum:
          - direct
          - matchmaker_intro
          - group
          type: string
          description: |-
            * `direct` - Direct Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `group` - Group Chat
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ChatParticipant'
          readOnly: true
        other_participant:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_message_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
        is_active:
          type: boolean
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
        chat_theme:
          enum:
          - default
          - dark
          - light
          - colorful
          type: string
          description: |-
            * `default` - Default
            * `dark` - Dark
            * `light` - Light
            * `colorful` - Colorful
    ChatParticipant:
      type: object
      description: Serializer for chat participants (simplified user info)
      properties:
        user_id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        profile_picture:
          type: string
          format: uri
          readOnly: true
        is_online:
          type: string
          readOnly: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
        last_seen_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
        custom_nickname:
          type: string
          nullable: true
          maxLength: 50
        notifications_enabled:
          type: boolean
        is_muted:
          type: string
          readOnly: true
    ChatReport:
      type: object
      description: Serializer for chat reports
      properties:
        id:
          type: integer
          readOnly: true
        reporter:
          type: integer
          readOnly: true
        reporter_name:
          type: string
          readOnly: true
        reported_user:
          type: integer
        reported_user_name:
          type: string
          readOnly: true
        chat:
          type: integer
        message:
          type: integer
          nullable: true
        report_type:
          enum:
          - spam
          - harassment
          - inappropriate_content
          - fake_profile
          - other
          type: string
          description: |-
            * `spam` - Spam
            * `harassment` - Harassment
            * `inappropriate_content` - Inappropriate Content
            * `fake_profile` - Fake Profile
            * `other` - Other
        description:
          type: string
          description: Detailed description of the issue
        status:
          enum:
          - pending
          - reviewed
          - resolved
          - dismissed
          type: string
          description: |-
            * `pending` - Pending
            * `reviewed` - Reviewed
            * `resolved` - Resolved
            * `dismissed` - Dismissed
          readOnly: true
        moderator_notes:
          type: string
          readOnly: true
          nullable: true
        action_taken:
          type: string
          readOnly: true
          nullable: true
        resolved_by:
          type: integer
          readOnly: true
          nullable: true
        resolved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - chat
      - description
      - report_type
      - reported_user
    ChatReportRequest:
      type: object
      description: Serializer for chat reports
      properties:
        reported_user:
          type: integer
        chat:
          type: integer
        message:
          type: integer
          nullable: true
        report_type:
          enum:
          - spam
          - harassment
          - inappropriate_content
          - fake_profile
          - other
          type: string
          description: |-
            * `spam` - Spam
            * `harassment` - Harassment
            * `inappropriate_content` - Inappropriate Content
            * `fake_profile` - Fake Profile
            * `other` - Other
        description:
          type: string
          minLength: 1
          description: Detailed description of the issue
      required:
      - chat
      - description
      - report_type
      - reported_user
    ChatSettings:
      type: object
      description: Serializer for chat settings
      properties:
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
        chat_theme:
          enum:
          - default
          - dark
          - light
          - colorful
          type: string
          description: |-
            * `default` - Default
            * `dark` - Dark
            * `light` - Light
            * `colorful` - Colorful
    ChatSettingsRequest:
      type: object
      description: Serializer for chat settings
      properties:
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
        chat_theme:
          enum:
          - default
          - dark
          - light
          - colorful
          type: string
          description: |-
            * `default` - Default
            * `dark` - Dark
            * `light` - Light
            * `colorful` - Colorful
    DocumentVerification:
      type: object
      description: Serializer for document verification
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        document_type:
          enum:
          - passport
          - national_id
          - drivers_license
          type: string
          description: |-
            * `passport` - Passport (Recommended)
            * `national_id` - National ID Card
            * `drivers_license` - Driver's License
        status:
          enum:
          - pending
          - processing
          - approved
          - rejected
          - failed
          type: string
          description: |-
            * `pending` - Pending
            * `processing` - Processing
            * `approved` - Approved
            * `rejected` - Rejected
            * `failed` - Failed
          readOnly: true
        front_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to front image of document
          maxLength: 200
        back_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to back image of document
          maxLength: 200
        extracted_data:
          type: object
          readOnly: true
          description: Data extracted from document via OCR
        verification_score:
          type: number
          format: double
          readOnly: true
          description: Verification confidence score (0-100)
        is_authentic:
          type: boolean
          readOnly: true
          description: Whether document appears authentic
        rejection_reason:
          type: string
          readOnly: true
          nullable: true
          description: Reason for rejection if applicable
        verification_service:
          type: string
          description: OCR/verification service used
          maxLength: 50
        service_response:
          type: object
          readOnly: true
          description: Raw response from verification service
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        processed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        extracted_name:
          type: string
          readOnly: true
        extracted_date_of_birth:
          type: string
          readOnly: true
        extracted_document_number:
          type: string
          readOnly: true
      required:
      - document_type
    DocumentVerificationCreate:
      type: object
      description: Serializer for creating document verification requests
      properties:
        document_type:
          enum:
          - passport
          - national_id
          - drivers_license
          type: string
          description: |-
            * `passport` - Passport (Recommended)
            * `national_id` - National ID Card
            * `drivers_license` - Driver's License
        front_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to front image of document
          maxLength: 200
        back_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to back image of document
          maxLength: 200
      required:
      - document_type
    DocumentVerificationCreateRequest:
      type: object
      description: Serializer for creating document verification requests
      properties:
        document_type:
          enum:
          - passport
          - national_id
          - drivers_license
          type: string
          description: |-
            * `passport` - Passport (Recommended)
            * `national_id` - National ID Card
            * `drivers_license` - Driver's License
        front_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to front image of document
          maxLength: 200
        back_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to back image of document
          maxLength: 200
      required:
      - document_type
    DocumentVerificationRequest:
      type: object
      description: Serializer for document verification
      properties:
        document_type:
          enum:
          - passport
          - national_id
          - drivers_license
          type: string
          description: |-
            * `passport` - Passport (Recommended)
            * `national_id` - National ID Card
            * `drivers_license` - Driver's License
        front_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to front image of document
          maxLength: 200
        back_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to back image of document
          maxLength: 200
        verification_service:
          type: string
          minLength: 1
          description: OCR/verification service used
          maxLength: 50
      required:
      - document_type
    GiftCategory:
      type: object
      description: Serializer for gift categories
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        display_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - display_name
      - name
    GiftTransaction:
      type: object
      description: Serializer for gift transactions
      properties:
        id:
          type: integer
          readOnly: true
        sender:
          type: integer
          readOnly: true
        sender_name:
          type: string
          readOnly: true
        recipient:
          type: integer
        recipient_name:
          type: string
          readOnly: true
        gift:
          type: integer
        gift_name:
          type: string
          readOnly: true
        gift_icon:
          type: string
          format: uri
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_cost:
          type: integer
          readOnly: true
          description: Total cost in Bondcoins
        context_type:
          enum:
          - chat
          - profile
          - live_session
          - general
          type: string
          description: |-
            * `chat` - Chat Message
            * `profile` - Profile
            * `live_session` - Live Session
            * `general` - General
        context_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: ID of related object (chat, live session, etc.)
        status:
          enum:
          - sent
          - received
          - failed
          type: string
          description: |-
            * `sent` - Sent
            * `received` - Received
            * `failed` - Failed
        message:
          type: string
          nullable: true
          description: Optional message with gift
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - gift
      - recipient
    JobApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        resumeUrl:
          type: string
          format: uri
        coverLetter:
          type: string
        experienceYears:
          type: integer
        currentCompany:
          type: string
        expectedSalary:
          type: string
        status:
          enum:
          - pending
          - reviewed
          - shortlisted
          - interviewed
          - accepted
          - rejected
          type: string
          description: |-
            * `pending` - Pending
            * `reviewed` - Reviewed
            * `shortlisted` - Shortlisted
            * `interviewed` - Interviewed
            * `accepted` - Accepted
            * `rejected` - Rejected
          readOnly: true
        appliedAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - email
      - firstName
      - lastName
    JobApplicationRequest:
      type: object
      properties:
        jobId:
          type: integer
          writeOnly: true
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        resumeUrl:
          type: string
          format: uri
        coverLetter:
          type: string
        experienceYears:
          type: integer
        currentCompany:
          type: string
        expectedSalary:
          type: string
      required:
      - email
      - firstName
      - jobId
      - lastName
    JobDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        jobType:
          type: string
        category:
          enum:
          - engineering
          - design
          - marketing
          - sales
          - product
          - operations
          - hr
          - finance
          - other
          type: string
          description: |-
            * `engineering` - Engineering
            * `design` - Design
            * `marketing` - Marketing
            * `sales` - Sales
            * `product` - Product
            * `operations` - Operations
            * `hr` - Human Resources
            * `finance` - Finance
            * `other` - Other
        status:
          enum:
          - open
          - closed
          - draft
          - archived
          type: string
          description: |-
            * `open` - Open
            * `closed` - Closed
            * `draft` - Draft
            * `archived` - Archived
        description:
          type: string
        location:
          type: string
          maxLength: 100
        salaryRange:
          type: string
        requirements:
          type: object
        createdAt:
          type: string
          format: date-time
      required:
      - category
      - createdAt
      - description
      - jobType
      - location
      - salaryRange
      - title
    JobList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        jobType:
          type: string
        category:
          enum:
          - engineering
          - design
          - marketing
          - sales
          - product
          - operations
          - hr
          - finance
          - other
          type: string
          description: |-
            * `engineering` - Engineering
            * `design` - Design
            * `marketing` - Marketing
            * `sales` - Sales
            * `product` - Product
            * `operations` - Operations
            * `hr` - Human Resources
            * `finance` - Finance
            * `other` - Other
        status:
          enum:
          - open
          - closed
          - draft
          - archived
          type: string
          description: |-
            * `open` - Open
            * `closed` - Closed
            * `draft` - Draft
            * `archived` - Archived
        salaryRange:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
      - category
      - createdAt
      - jobType
      - salaryRange
      - title
    LiveGift:
      type: object
      description: Serializer for live session gifts
      properties:
        id:
          type: integer
          readOnly: true
        session:
          type: integer
        sender:
          type: integer
          readOnly: true
        sender_name:
          type: string
          readOnly: true
        gift:
          type: integer
        gift_name:
          type: string
          readOnly: true
        gift_icon:
          type: string
          format: uri
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total cost in Bondcoins
        chat_message:
          type: string
          description: Message shown in live chat
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - chat_message
      - gift
      - session
      - total_cost
    LiveGiftCreate:
      type: object
      description: Serializer for creating live session gifts
      properties:
        session:
          type: integer
        gift:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - gift
      - session
    LiveGiftCreateRequest:
      type: object
      description: Serializer for creating live session gifts
      properties:
        session:
          type: integer
        gift:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - gift
      - session
    LiveJoinRequest:
      type: object
      description: Serializer for live session join requests
      properties:
        id:
          type: integer
          readOnly: true
        session:
          type: integer
        session_title:
          type: string
          readOnly: true
        host_name:
          type: string
          readOnly: true
        requester:
          type: integer
          readOnly: true
        requester_name:
          type: string
          readOnly: true
        requester_profile_picture:
          type: string
          format: uri
          readOnly: true
        requested_role:
          enum:
          - co_host
          - speaker
          type: string
          description: |-
            * `co_host` - Co-Host
            * `speaker` - Speaker
        status:
          enum:
          - pending
          - approved
          - rejected
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `approved` - Approved
            * `rejected` - Rejected
            * `cancelled` - Cancelled
        message:
          type: string
          nullable: true
          description: Optional message from requester
        responded_by:
          type: integer
          readOnly: true
          nullable: true
        response_message:
          type: string
          nullable: true
        responded_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - session
    LiveJoinRequestCreate:
      type: object
      description: Serializer for creating live session join requests
      properties:
        session:
          type: integer
        requested_role:
          enum:
          - co_host
          - speaker
          type: string
          description: |-
            * `co_host` - Co-Host
            * `speaker` - Speaker
        message:
          type: string
          nullable: true
          description: Optional message from requester
      required:
      - session
    LiveJoinRequestCreateRequest:
      type: object
      description: Serializer for creating live session join requests
      properties:
        session:
          type: integer
        requested_role:
          enum:
          - co_host
          - speaker
          type: string
          description: |-
            * `co_host` - Co-Host
            * `speaker` - Speaker
        message:
          type: string
          nullable: true
          description: Optional message from requester
      required:
      - session
    LiveJoinRequestManage:
      type: object
      description: Serializer for managing live session join requests (host response)
      properties:
        status:
          enum:
          - pending
          - approved
          - rejected
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `approved` - Approved
            * `rejected` - Rejected
            * `cancelled` - Cancelled
        response_message:
          type: string
          nullable: true
    LiveJoinRequestManageRequest:
      type: object
      description: Serializer for managing live session join requests (host response)
      properties:
        status:
          enum:
          - pending
          - approved
          - rejected
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `approved` - Approved
            * `rejected` - Rejected
            * `cancelled` - Cancelled
        response_message:
          type: string
          nullable: true
    LiveJoinRequestRequest:
      type: object
      description: Serializer for live session join requests
      properties:
        session:
          type: integer
        requested_role:
          enum:
          - co_host
          - speaker
          type: string
          description: |-
            * `co_host` - Co-Host
            * `speaker` - Speaker
        status:
          enum:
          - pending
          - approved
          - rejected
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `approved` - Approved
            * `rejected` - Rejected
            * `cancelled` - Cancelled
        message:
          type: string
          nullable: true
          description: Optional message from requester
        response_message:
          type: string
          nullable: true
      required:
      - session
    LiveSession:
      type: object
      description: Serializer for live sessions
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        user_profile_picture:
          type: string
          format: uri
          readOnly: true
        title:
          type: string
          nullable: true
          description: Title of the live session
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Description of the live session
        subject_matter:
          type: string
          nullable: true
          description: Subject matter like 'Speed Dating'
          maxLength: 255
        start_time:
          type: string
          format: date-time
          readOnly: true
          description: When the live session started
        end_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the live session ended
        status:
          enum:
          - active
          - ended
          - scheduled
          - cancelled
          type: string
          description: |-
            * `active` - Active
            * `ended` - Ended
            * `scheduled` - Scheduled
            * `cancelled` - Cancelled
        duration_limit_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum duration in minutes
        viewers_count:
          type: integer
          readOnly: true
        likes_count:
          type: integer
          readOnly: true
        stream_url:
          type: string
          format: uri
          nullable: true
          description: URL for the live stream
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          description: Thumbnail URL for the live session
          maxLength: 200
        is_active:
          type: boolean
          readOnly: true
        current_duration:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    LiveSessionCreate:
      type: object
      description: Serializer for creating live sessions
      properties:
        title:
          type: string
          nullable: true
          description: Title of the live session
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Description of the live session
        duration_limit_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum duration in minutes
    LiveSessionCreateRequest:
      type: object
      description: Serializer for creating live sessions
      properties:
        title:
          type: string
          nullable: true
          description: Title of the live session
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Description of the live session
        duration_limit_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum duration in minutes
    LiveSessionRequest:
      type: object
      description: Serializer for live sessions
      properties:
        title:
          type: string
          nullable: true
          description: Title of the live session
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Description of the live session
        subject_matter:
          type: string
          nullable: true
          description: Subject matter like 'Speed Dating'
          maxLength: 255
        status:
          enum:
          - active
          - ended
          - scheduled
          - cancelled
          type: string
          description: |-
            * `active` - Active
            * `ended` - Ended
            * `scheduled` - Scheduled
            * `cancelled` - Cancelled
        duration_limit_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum duration in minutes
        stream_url:
          type: string
          format: uri
          nullable: true
          description: URL for the live stream
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          description: Thumbnail URL for the live session
          maxLength: 200
    Message:
      type: object
      description: Serializer for individual messages
      properties:
        id:
          type: integer
          readOnly: true
        chat:
          type: integer
          readOnly: true
        sender_id:
          type: integer
          readOnly: true
        sender_name:
          type: string
          readOnly: true
        sender_profile_picture:
          type: string
          format: uri
          readOnly: true
        message_type:
          enum:
          - text
          - voice_note
          - image
          - video
          - document
          - system
          - matchmaker_intro
          - call_start
          - call_end
          - tip
          type: string
          description: |-
            * `text` - Text Message
            * `voice_note` - Voice Note
            * `image` - Image
            * `video` - Video
            * `document` - Document
            * `system` - System Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `call_start` - Call Started
            * `call_end` - Call Ended
            * `tip` - Tip Message
        content:
          type: string
          nullable: true
          description: Text content of the message
        voice_note_url:
          type: string
          format: uri
          nullable: true
          description: URL to the voice note audio file
          maxLength: 200
        voice_note_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in seconds
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        document_url:
          type: string
          format: uri
          nullable: true
          description: URL to document file
          maxLength: 200
        document_name:
          type: string
          nullable: true
          description: Original document name
          maxLength: 255
        tip_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Tip amount in Bondcoins
        tip_gift:
          type: integer
          nullable: true
          description: Gift sent with this message
        timestamp:
          type: string
          format: date-time
          readOnly: true
        formatted_timestamp:
          type: string
          readOnly: true
        is_read:
          type: boolean
          readOnly: true
        read_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_edited:
          type: boolean
          readOnly: true
        edited_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        reply_to:
          type: integer
          nullable: true
        reply_to_message:
          type: string
          readOnly: true
        reactions:
          type: object
          readOnly: true
          description: 'User reactions: {''user_id'': ''emoji''}'
        is_from_current_user:
          type: string
          readOnly: true
    MessageCreate:
      type: object
      description: Serializer for creating new messages
      properties:
        message_type:
          enum:
          - text
          - voice_note
          - image
          - video
          - document
          - system
          - matchmaker_intro
          - call_start
          - call_end
          - tip
          type: string
          description: |-
            * `text` - Text Message
            * `voice_note` - Voice Note
            * `image` - Image
            * `video` - Video
            * `document` - Document
            * `system` - System Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `call_start` - Call Started
            * `call_end` - Call Ended
            * `tip` - Tip Message
        content:
          type: string
          nullable: true
          description: Text content of the message
        voice_note_url:
          type: string
          format: uri
          nullable: true
          description: URL to the voice note audio file
          maxLength: 200
        voice_note_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in seconds
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        document_url:
          type: string
          format: uri
          nullable: true
          description: URL to document file
          maxLength: 200
        document_name:
          type: string
          nullable: true
          description: Original document name
          maxLength: 255
        reply_to:
          type: integer
          nullable: true
        tip_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Tip amount in Bondcoins
        tip_gift:
          type: integer
          nullable: true
          description: Gift sent with this message
    MessageCreateRequest:
      type: object
      description: Serializer for creating new messages
      properties:
        message_type:
          enum:
          - text
          - voice_note
          - image
          - video
          - document
          - system
          - matchmaker_intro
          - call_start
          - call_end
          - tip
          type: string
          description: |-
            * `text` - Text Message
            * `voice_note` - Voice Note
            * `image` - Image
            * `video` - Video
            * `document` - Document
            * `system` - System Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `call_start` - Call Started
            * `call_end` - Call Ended
            * `tip` - Tip Message
        content:
          type: string
          nullable: true
          description: Text content of the message
        voice_note_url:
          type: string
          format: uri
          nullable: true
          description: URL to the voice note audio file
          maxLength: 200
        voice_note_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in seconds
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        document_url:
          type: string
          format: uri
          nullable: true
          description: URL to document file
          maxLength: 200
        document_name:
          type: string
          nullable: true
          description: Original document name
          maxLength: 255
        reply_to:
          type: integer
          nullable: true
        tip_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Tip amount in Bondcoins
        tip_gift:
          type: integer
          nullable: true
          description: Gift sent with this message
    MessageRequest:
      type: object
      description: Serializer for individual messages
      properties:
        message_type:
          enum:
          - text
          - voice_note
          - image
          - video
          - document
          - system
          - matchmaker_intro
          - call_start
          - call_end
          - tip
          type: string
          description: |-
            * `text` - Text Message
            * `voice_note` - Voice Note
            * `image` - Image
            * `video` - Video
            * `document` - Document
            * `system` - System Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `call_start` - Call Started
            * `call_end` - Call Ended
            * `tip` - Tip Message
        content:
          type: string
          nullable: true
          description: Text content of the message
        voice_note_url:
          type: string
          format: uri
          nullable: true
          description: URL to the voice note audio file
          maxLength: 200
        voice_note_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in seconds
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        document_url:
          type: string
          format: uri
          nullable: true
          description: URL to document file
          maxLength: 200
        document_name:
          type: string
          nullable: true
          description: Original document name
          maxLength: 255
        tip_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Tip amount in Bondcoins
        tip_gift:
          type: integer
          nullable: true
          description: Gift sent with this message
        reply_to:
          type: integer
          nullable: true
    NewsletterSubscriber:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        date_subscribed:
          type: string
          format: date-time
          readOnly: true
      required:
      - email
    NewsletterSubscriberRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
      required:
      - email
    PaginatedBondcoinPackageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BondcoinPackage'
    PaginatedBondcoinTransactionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BondcoinTransaction'
    PaginatedChatList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Chat'
    PaginatedDocumentVerificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentVerification'
    PaginatedGiftCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GiftCategory'
    PaginatedGiftTransactionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GiftTransaction'
    PaginatedJobListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobList'
    PaginatedLiveGiftList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LiveGift'
    PaginatedLiveJoinRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LiveJoinRequest'
    PaginatedLiveSessionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LiveSession'
    PaginatedMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedPaymentMethodList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaginatedPaymentTransactionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
    PaginatedPostCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
    PaginatedPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PaginatedStoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Story'
    PaginatedSubscriptionPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
    PaginatedUserSecurityQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSecurityQuestion'
    PaginatedUserSocialHandleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSocialHandle'
    PaginatedUserSubscriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscription'
    PaginatedVirtualGiftList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VirtualGift'
    PatchedChatSettingsRequest:
      type: object
      description: Serializer for chat settings
      properties:
        chat_name:
          type: string
          nullable: true
          description: Custom name for group chats
          maxLength: 100
        chat_theme:
          enum:
          - default
          - dark
          - light
          - colorful
          type: string
          description: |-
            * `default` - Default
            * `dark` - Dark
            * `light` - Light
            * `colorful` - Colorful
    PatchedDocumentVerificationRequest:
      type: object
      description: Serializer for document verification
      properties:
        document_type:
          enum:
          - passport
          - national_id
          - drivers_license
          type: string
          description: |-
            * `passport` - Passport (Recommended)
            * `national_id` - National ID Card
            * `drivers_license` - Driver's License
        front_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to front image of document
          maxLength: 200
        back_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to back image of document
          maxLength: 200
        verification_service:
          type: string
          minLength: 1
          description: OCR/verification service used
          maxLength: 50
    PatchedLiveJoinRequestManageRequest:
      type: object
      description: Serializer for managing live session join requests (host response)
      properties:
        status:
          enum:
          - pending
          - approved
          - rejected
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `approved` - Approved
            * `rejected` - Rejected
            * `cancelled` - Cancelled
        response_message:
          type: string
          nullable: true
    PatchedLiveJoinRequestRequest:
      type: object
      description: Serializer for live session join requests
      properties:
        session:
          type: integer
        requested_role:
          enum:
          - co_host
          - speaker
          type: string
          description: |-
            * `co_host` - Co-Host
            * `speaker` - Speaker
        status:
          enum:
          - pending
          - approved
          - rejected
          - cancelled
          type: string
          description: |-
            * `pending` - Pending
            * `approved` - Approved
            * `rejected` - Rejected
            * `cancelled` - Cancelled
        message:
          type: string
          nullable: true
          description: Optional message from requester
        response_message:
          type: string
          nullable: true
    PatchedLiveSessionRequest:
      type: object
      description: Serializer for live sessions
      properties:
        title:
          type: string
          nullable: true
          description: Title of the live session
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Description of the live session
        subject_matter:
          type: string
          nullable: true
          description: Subject matter like 'Speed Dating'
          maxLength: 255
        status:
          enum:
          - active
          - ended
          - scheduled
          - cancelled
          type: string
          description: |-
            * `active` - Active
            * `ended` - Ended
            * `scheduled` - Scheduled
            * `cancelled` - Cancelled
        duration_limit_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum duration in minutes
        stream_url:
          type: string
          format: uri
          nullable: true
          description: URL for the live stream
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          description: Thumbnail URL for the live session
          maxLength: 200
    PatchedMessageRequest:
      type: object
      description: Serializer for individual messages
      properties:
        message_type:
          enum:
          - text
          - voice_note
          - image
          - video
          - document
          - system
          - matchmaker_intro
          - call_start
          - call_end
          - tip
          type: string
          description: |-
            * `text` - Text Message
            * `voice_note` - Voice Note
            * `image` - Image
            * `video` - Video
            * `document` - Document
            * `system` - System Message
            * `matchmaker_intro` - Matchmaker Introduction
            * `call_start` - Call Started
            * `call_end` - Call Ended
            * `tip` - Tip Message
        content:
          type: string
          nullable: true
          description: Text content of the message
        voice_note_url:
          type: string
          format: uri
          nullable: true
          description: URL to the voice note audio file
          maxLength: 200
        voice_note_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in seconds
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        document_url:
          type: string
          format: uri
          nullable: true
          description: URL to document file
          maxLength: 200
        document_name:
          type: string
          nullable: true
          description: Original document name
          maxLength: 255
        tip_amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Tip amount in Bondcoins
        tip_gift:
          type: integer
          nullable: true
          description: Gift sent with this message
        reply_to:
          type: integer
          nullable: true
    PatchedPostCreateRequest:
      type: object
      description: Serializer for creating new posts
      properties:
        post_type:
          enum:
          - story
          - post
          - announcement
          type: string
          description: |-
            * `story` - Story
            * `post` - Regular Post
            * `announcement` - Announcement
        content:
          type: string
          minLength: 1
          description: Post content/text
        image_urls:
          type: object
          description: List of image URLs
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_thumbnail:
          type: string
          format: uri
          nullable: true
          description: Video thumbnail URL
          maxLength: 200
        visibility:
          enum:
          - public
          - friends
          - private
          type: string
          description: |-
            * `public` - Public
            * `friends` - Friends Only
            * `private` - Private
        location:
          type: string
          nullable: true
          description: Post location
          maxLength: 255
        hashtags:
          type: object
          description: List of hashtags in the post
        mentions:
          type: object
          description: List of mentioned user IDs
    PatchedUserSecurityQuestionRequest:
      type: object
      description: Serializer for user security questions
      properties:
        question_type:
          enum:
          - data_protection
          - scam_prevention
          - relationship_guidance
          - matchmaking_evolution
          - unique_skills
          - business_service
          type: string
          description: |-
            * `data_protection` - How will you protect user data?
            * `scam_prevention` - What actions will you take if you suspect a scam or fake profile?
            * `relationship_guidance` - Do you also provide relationship guidance?
            * `matchmaking_evolution` - How do you see matchmaking evolving in the 21st century?
            * `unique_skills` - What unique skills set you apart?
            * `business_service` - Do you run matchmaking as a business or community service?
        response:
          type: string
          minLength: 1
          description: User's response to the security question
        is_public:
          type: boolean
          description: Whether this response is shown publicly
    PatchedUserSocialHandleRequest:
      type: object
      description: Serializer for user social media handles
      properties:
        platform:
          enum:
          - instagram
          - twitter
          - facebook
          - linkedin
          - tiktok
          - snapchat
          - youtube
          - pinterest
          - website
          - other
          type: string
          description: |-
            Social media platform

            * `instagram` - Instagram
            * `twitter` - Twitter/X
            * `facebook` - Facebook
            * `linkedin` - LinkedIn
            * `tiktok` - TikTok
            * `snapchat` - Snapchat
            * `youtube` - YouTube
            * `pinterest` - Pinterest
            * `website` - Personal Website
            * `other` - Other
        handle:
          type: string
          minLength: 1
          description: User's handle or username on the platform
          maxLength: 100
        url:
          type: string
          format: uri
          nullable: true
          description: Optional direct URL to the profile
          maxLength: 200
    PatchedUserSubscriptionRequest:
      type: object
      description: Serializer for user subscriptions
      properties:
        plan:
          type: integer
        status:
          enum:
          - active
          - expired
          - cancelled
          - pending
          type: string
          description: |-
            * `active` - Active
            * `expired` - Expired
            * `cancelled` - Cancelled
            * `pending` - Pending
        end_date:
          type: string
          format: date-time
        payment_method:
          type: string
          minLength: 1
          description: bondcoin, credit_card, etc.
          maxLength: 50
        transaction_id:
          type: string
          nullable: true
          maxLength: 255
        auto_renew:
          type: boolean
    PaymentMethod:
      type: object
      description: Serializer for payment methods
      properties:
        id:
          type: integer
          readOnly: true
        name:
          enum:
          - credit_card
          - debit_card
          - paypal
          - apple_pay
          - google_pay
          - bank_transfer
          - crypto
          type: string
          description: |-
            * `credit_card` - Credit Card
            * `debit_card` - Debit Card
            * `paypal` - PayPal
            * `apple_pay` - Apple Pay
            * `google_pay` - Google Pay
            * `bank_transfer` - Bank Transfer
            * `crypto` - Cryptocurrency
        display_name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        icon_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_active:
          type: boolean
        processing_fee_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Processing fee percentage
        min_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Minimum transaction amount
        max_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Maximum transaction amount
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - display_name
      - name
    PaymentTransaction:
      type: object
      description: Serializer for payment transactions
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        transaction_type:
          enum:
          - subscription
          - bondcoin_purchase
          - refund
          type: string
          description: |-
            * `subscription` - Subscription Purchase
            * `bondcoin_purchase` - Bondcoin Purchase
            * `refund` - Refund
        payment_method:
          type: integer
        payment_method_display:
          type: string
          readOnly: true
        amount_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Amount in USD
        processing_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Processing fee amount
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total amount including fees
        currency:
          type: string
          maxLength: 3
        status:
          enum:
          - pending
          - processing
          - completed
          - failed
          - cancelled
          - refunded
          type: string
          description: |-
            * `pending` - Pending
            * `processing` - Processing
            * `completed` - Completed
            * `failed` - Failed
            * `cancelled` - Cancelled
            * `refunded` - Refunded
        provider:
          type: string
          nullable: true
          description: Payment provider (stripe, paypal, etc.)
          maxLength: 50
        provider_transaction_id:
          type: string
          readOnly: true
          nullable: true
          description: External provider transaction ID
        subscription:
          type: integer
          nullable: true
        bondcoin_transaction:
          type: integer
          nullable: true
        description:
          type: string
          description: Transaction description
          maxLength: 255
        metadata:
          type: object
          nullable: true
          description: Additional transaction metadata
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        processed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - amount_usd
      - description
      - payment_method
      - total_amount
      - transaction_type
    Post:
      type: object
      description: Serializer for posts in the Bond Story feed
      properties:
        id:
          type: integer
          readOnly: true
        author_id:
          type: integer
          readOnly: true
        author_name:
          type: string
          readOnly: true
        author_profile_picture:
          type: string
          format: uri
          readOnly: true
        author_location:
          type: string
          readOnly: true
        post_type:
          enum:
          - story
          - post
          - announcement
          type: string
          description: |-
            * `story` - Story
            * `post` - Regular Post
            * `announcement` - Announcement
        content:
          type: string
          description: Post content/text
        image_urls:
          type: object
          description: List of image URLs
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_thumbnail:
          type: string
          format: uri
          nullable: true
          description: Video thumbnail URL
          maxLength: 200
        visibility:
          enum:
          - public
          - friends
          - private
          type: string
          description: |-
            * `public` - Public
            * `friends` - Friends Only
            * `private` - Private
        location:
          type: string
          nullable: true
          description: Post location
          maxLength: 255
        hashtags:
          type: object
          description: List of hashtags in the post
        mentions:
          type: object
          description: List of mentioned user IDs
        likes_count:
          type: integer
          readOnly: true
        comments_count:
          type: integer
          readOnly: true
        shares_count:
          type: integer
          readOnly: true
        bonds_count:
          type: integer
          readOnly: true
          description: Handshake/bond reactions
        engagement_score:
          type: integer
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        is_featured:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        formatted_timestamp:
          type: string
          readOnly: true
        is_from_current_user:
          type: string
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
          readOnly: true
        user_interactions:
          type: string
          readOnly: true
      required:
      - content
    PostComment:
      type: object
      description: Serializer for post comments
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
        author_id:
          type: integer
          readOnly: true
        author_name:
          type: string
          readOnly: true
        author_profile_picture:
          type: string
          format: uri
          readOnly: true
        author_location:
          type: string
          readOnly: true
        content:
          type: string
          description: Comment content
        parent_comment:
          type: integer
          nullable: true
        likes_count:
          type: integer
          readOnly: true
        replies_count:
          type: integer
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        is_edited:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        formatted_timestamp:
          type: string
          readOnly: true
        is_from_current_user:
          type: string
          readOnly: true
      required:
      - content
      - post
    PostCommentRequest:
      type: object
      description: Serializer for post comments
      properties:
        post:
          type: integer
        content:
          type: string
          minLength: 1
          description: Comment content
        parent_comment:
          type: integer
          nullable: true
      required:
      - content
      - post
    PostCreate:
      type: object
      description: Serializer for creating new posts
      properties:
        post_type:
          enum:
          - story
          - post
          - announcement
          type: string
          description: |-
            * `story` - Story
            * `post` - Regular Post
            * `announcement` - Announcement
        content:
          type: string
          description: Post content/text
        image_urls:
          type: object
          description: List of image URLs
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_thumbnail:
          type: string
          format: uri
          nullable: true
          description: Video thumbnail URL
          maxLength: 200
        visibility:
          enum:
          - public
          - friends
          - private
          type: string
          description: |-
            * `public` - Public
            * `friends` - Friends Only
            * `private` - Private
        location:
          type: string
          nullable: true
          description: Post location
          maxLength: 255
        hashtags:
          type: object
          description: List of hashtags in the post
        mentions:
          type: object
          description: List of mentioned user IDs
      required:
      - content
    PostCreateRequest:
      type: object
      description: Serializer for creating new posts
      properties:
        post_type:
          enum:
          - story
          - post
          - announcement
          type: string
          description: |-
            * `story` - Story
            * `post` - Regular Post
            * `announcement` - Announcement
        content:
          type: string
          minLength: 1
          description: Post content/text
        image_urls:
          type: object
          description: List of image URLs
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_thumbnail:
          type: string
          format: uri
          nullable: true
          description: Video thumbnail URL
          maxLength: 200
        visibility:
          enum:
          - public
          - friends
          - private
          type: string
          description: |-
            * `public` - Public
            * `friends` - Friends Only
            * `private` - Private
        location:
          type: string
          nullable: true
          description: Post location
          maxLength: 255
        hashtags:
          type: object
          description: List of hashtags in the post
        mentions:
          type: object
          description: List of mentioned user IDs
      required:
      - content
    PostReport:
      type: object
      description: Serializer for post/comment reports
      properties:
        id:
          type: integer
          readOnly: true
        reporter:
          type: integer
          readOnly: true
        reporter_name:
          type: string
          readOnly: true
        reported_user:
          type: integer
        reported_user_name:
          type: string
          readOnly: true
        post:
          type: integer
          nullable: true
        comment:
          type: integer
          nullable: true
        report_type:
          enum:
          - spam
          - inappropriate
          - harassment
          - misinformation
          - fake
          - other
          type: string
          description: |-
            * `spam` - Spam or Misleading
            * `inappropriate` - Inappropriate or Offensive
            * `harassment` - Harassment or Bullying
            * `misinformation` - Misinformation
            * `fake` - Fake Profile
            * `other` - Other
        description:
          type: string
          description: Detailed description of the issue
        status:
          enum:
          - pending
          - reviewed
          - resolved
          - dismissed
          type: string
          description: |-
            * `pending` - Pending
            * `reviewed` - Reviewed
            * `resolved` - Resolved
            * `dismissed` - Dismissed
          readOnly: true
        moderator_notes:
          type: string
          readOnly: true
          nullable: true
        action_taken:
          type: string
          readOnly: true
          nullable: true
        resolved_by:
          type: integer
          readOnly: true
          nullable: true
        resolved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - description
      - report_type
      - reported_user
    PostReportRequest:
      type: object
      description: Serializer for post/comment reports
      properties:
        reported_user:
          type: integer
        post:
          type: integer
          nullable: true
        comment:
          type: integer
          nullable: true
        report_type:
          enum:
          - spam
          - inappropriate
          - harassment
          - misinformation
          - fake
          - other
          type: string
          description: |-
            * `spam` - Spam or Misleading
            * `inappropriate` - Inappropriate or Offensive
            * `harassment` - Harassment or Bullying
            * `misinformation` - Misinformation
            * `fake` - Fake Profile
            * `other` - Other
        description:
          type: string
          minLength: 1
          description: Detailed description of the issue
      required:
      - description
      - report_type
      - reported_user
    PostShare:
      type: object
      description: Serializer for post shares
      properties:
        platform:
          enum:
          - whatsapp
          - facebook
          - twitter
          - instagram
          - threads
          - copy_link
          type: string
          description: |-
            * `whatsapp` - WhatsApp
            * `facebook` - Facebook
            * `twitter` - Twitter/X
            * `instagram` - Instagram
            * `threads` - Threads
            * `copy_link` - Copy Link
      required:
      - platform
    PostShareRequest:
      type: object
      description: Serializer for post shares
      properties:
        platform:
          enum:
          - whatsapp
          - facebook
          - twitter
          - instagram
          - threads
          - copy_link
          type: string
          description: |-
            * `whatsapp` - WhatsApp
            * `facebook` - Facebook
            * `twitter` - Twitter/X
            * `instagram` - Instagram
            * `threads` - Threads
            * `copy_link` - Copy Link
      required:
      - platform
    Story:
      type: object
      description: Serializer for user stories
      properties:
        id:
          type: integer
          readOnly: true
        author_id:
          type: integer
          readOnly: true
        author_name:
          type: string
          readOnly: true
        author_profile_picture:
          type: string
          format: uri
          readOnly: true
        story_type:
          enum:
          - image
          - video
          - text
          type: string
          description: |-
            * `image` - Image Story
            * `video` - Video Story
            * `text` - Text Story
        content:
          type: string
          nullable: true
          description: Text content for text stories
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Video duration in seconds
        background_color:
          type: string
          nullable: true
          description: Hex color for text stories
          maxLength: 7
        text_color:
          type: string
          nullable: true
          description: Text color for text stories
          maxLength: 7
        font_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Font size for text stories
        views_count:
          type: integer
          readOnly: true
        reactions_count:
          type: integer
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
          description: When the story expires (24 hours from creation)
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        user_has_viewed:
          type: string
          readOnly: true
        user_reaction:
          type: string
          readOnly: true
    StoryCreate:
      type: object
      description: Serializer for creating new stories
      properties:
        story_type:
          enum:
          - image
          - video
          - text
          type: string
          description: |-
            * `image` - Image Story
            * `video` - Video Story
            * `text` - Text Story
        content:
          type: string
          nullable: true
          description: Text content for text stories
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Video duration in seconds
        background_color:
          type: string
          nullable: true
          description: Hex color for text stories
          maxLength: 7
        text_color:
          type: string
          nullable: true
          description: Text color for text stories
          maxLength: 7
        font_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Font size for text stories
    StoryCreateRequest:
      type: object
      description: Serializer for creating new stories
      properties:
        story_type:
          enum:
          - image
          - video
          - text
          type: string
          description: |-
            * `image` - Image Story
            * `video` - Video Story
            * `text` - Text Story
        content:
          type: string
          nullable: true
          description: Text content for text stories
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to image file
          maxLength: 200
        video_url:
          type: string
          format: uri
          nullable: true
          description: URL to video file
          maxLength: 200
        video_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Video duration in seconds
        background_color:
          type: string
          nullable: true
          description: Hex color for text stories
          maxLength: 7
        text_color:
          type: string
          nullable: true
          description: Text color for text stories
          maxLength: 7
        font_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Font size for text stories
    SubscriptionPlan:
      type: object
      description: Serializer for subscription plans
      properties:
        id:
          type: integer
          readOnly: true
        name:
          enum:
          - free
          - basic
          - pro
          - prime
          type: string
          description: |-
            * `free` - Free
            * `basic` - Basic
            * `pro` - Pro
            * `prime` - Prime
        display_name:
          type: string
          description: Display name like 'BONDAH Basic'
          maxLength: 100
        description:
          type: string
          nullable: true
        duration:
          enum:
          - 1_week
          - 1_month
          - 3_months
          - 6_months
          - 1_year
          type: string
          description: |-
            * `1_week` - 1 Week
            * `1_month` - 1 Month
            * `3_months` - 3 Months
            * `6_months` - 6 Months
            * `1_year` - 1 Year
        price_bondcoins:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in Bondcoins
        price_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price in USD
        unlimited_swipes:
          type: boolean
        undo_swipes:
          type: boolean
        unlimited_unwind:
          type: boolean
        global_access:
          type: boolean
        read_receipt:
          type: boolean
        live_hours_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Live hours in days
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - display_name
      - name
      - price_bondcoins
      - price_usd
    SubscriptionPlanRequest:
      type: object
      description: Serializer for subscription plans
      properties:
        name:
          enum:
          - free
          - basic
          - pro
          - prime
          type: string
          description: |-
            * `free` - Free
            * `basic` - Basic
            * `pro` - Pro
            * `prime` - Prime
        display_name:
          type: string
          minLength: 1
          description: Display name like 'BONDAH Basic'
          maxLength: 100
        description:
          type: string
          nullable: true
        duration:
          enum:
          - 1_week
          - 1_month
          - 3_months
          - 6_months
          - 1_year
          type: string
          description: |-
            * `1_week` - 1 Week
            * `1_month` - 1 Month
            * `3_months` - 3 Months
            * `6_months` - 6 Months
            * `1_year` - 1 Year
        price_bondcoins:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in Bondcoins
        price_usd:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price in USD
        unlimited_swipes:
          type: boolean
        undo_swipes:
          type: boolean
        unlimited_unwind:
          type: boolean
        global_access:
          type: boolean
        read_receipt:
          type: boolean
        live_hours_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Live hours in days
        is_active:
          type: boolean
      required:
      - display_name
      - name
      - price_bondcoins
      - price_usd
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        gender:
          type: string
          nullable: true
          maxLength: 10
        age:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 100
        is_matchmaker:
          type: boolean
        bio:
          type: string
        profile_picture:
          type: string
          format: uri
          nullable: true
          description: Main profile picture URL
          maxLength: 200
        profile_gallery:
          type: object
          description: Array of additional profile picture URLs
        education_level:
          enum:
          - high_school
          - undergrad
          - bachelors
          - masters
          - phd
          - other
          - ''
          - null
          type: string
          description: |-
            * `high_school` - High School
            * `undergrad` - Undergraduate
            * `bachelors` - Bachelor's Degree
            * `masters` - Master's Degree
            * `phd` - PhD
            * `other` - Other
          nullable: true
        height:
          type: string
          nullable: true
          description: Height in feet/inches or cm
          maxLength: 10
        zodiac_sign:
          enum:
          - aries
          - taurus
          - gemini
          - cancer
          - leo
          - virgo
          - libra
          - scorpio
          - sagittarius
          - capricorn
          - aquarius
          - pisces
          - ''
          - null
          type: string
          description: |-
            * `aries` - Aries
            * `taurus` - Taurus
            * `gemini` - Gemini
            * `cancer` - Cancer
            * `leo` - Leo
            * `virgo` - Virgo
            * `libra` - Libra
            * `scorpio` - Scorpio
            * `sagittarius` - Sagittarius
            * `capricorn` - Capricorn
            * `aquarius` - Aquarius
            * `pisces` - Pisces
          nullable: true
        languages:
          type: object
          description: Languages spoken (e.g., ['English', 'French'])
        relationship_status:
          enum:
          - single
          - divorced
          - widowed
          - separated
          - ''
          - null
          type: string
          description: |-
            * `single` - Single
            * `divorced` - Divorced
            * `widowed` - Widowed
            * `separated` - Separated
          nullable: true
        smoking_preference:
          enum:
          - never
          - occasionally
          - regularly
          - quit
          - ''
          - null
          type: string
          description: |-
            * `never` - Never
            * `occasionally` - Occasionally
            * `regularly` - Regularly
            * `quit` - Quit
          nullable: true
        drinking_preference:
          enum:
          - never
          - occasionally
          - regularly
          - quit
          - ''
          - null
          type: string
          description: |-
            * `never` - Never
            * `occasionally` - Occasionally
            * `regularly` - Regularly
            * `quit` - Quit
          nullable: true
        pet_preference:
          enum:
          - dog
          - cat
          - both
          - none
          - other
          - ''
          - null
          type: string
          description: |-
            * `dog` - Dog
            * `cat` - Cat
            * `both` - Both
            * `none` - None
            * `other` - Other
          nullable: true
        exercise_frequency:
          enum:
          - never
          - 1x_week
          - 2x_week
          - 3x_week
          - 4x_week
          - 5x_week
          - daily
          - ''
          - null
          type: string
          description: |-
            * `never` - Never
            * `1x_week` - 1x/week
            * `2x_week` - 2x/week
            * `3x_week` - 3x/week
            * `4x_week` - 4x/week
            * `5x_week` - 5x/week
            * `daily` - Daily
          nullable: true
        kids_preference:
          enum:
          - want
          - dont_want
          - have_kids
          - open
          - ''
          - null
          type: string
          description: |-
            * `want` - Want Kids
            * `dont_want` - Don't Want Kids
            * `have_kids` - Have Kids
            * `open` - Open to Kids
          nullable: true
        personality_type:
          enum:
          - INTJ
          - INTP
          - ENTJ
          - ENTP
          - INFJ
          - INFP
          - ENFJ
          - ENFP
          - ISTJ
          - ISFJ
          - ESTJ
          - ESFJ
          - ISTP
          - ISFP
          - ESTP
          - ESFP
          - ''
          - null
          type: string
          description: |-
            * `INTJ` - INTJ
            * `INTP` - INTP
            * `ENTJ` - ENTJ
            * `ENTP` - ENTP
            * `INFJ` - INFJ
            * `INFP` - INFP
            * `ENFJ` - ENFJ
            * `ENFP` - ENFP
            * `ISTJ` - ISTJ
            * `ISFJ` - ISFJ
            * `ESTJ` - ESTJ
            * `ESFJ` - ESFJ
            * `ISTP` - ISTP
            * `ISFP` - ISFP
            * `ESTP` - ESTP
            * `ESFP` - ESFP
          nullable: true
        love_language:
          enum:
          - physical_touch
          - gifts
          - quality_time
          - words_of_affirmation
          - acts_of_service
          - ''
          - null
          type: string
          description: |-
            * `physical_touch` - Physical Touch
            * `gifts` - Gifts
            * `quality_time` - Quality Time
            * `words_of_affirmation` - Words of Affirmation
            * `acts_of_service` - Acts of Service
          nullable: true
        communication_style:
          enum:
          - direct
          - romantic
          - playful
          - reserved
          - ''
          - null
          type: string
          description: |-
            * `direct` - Direct
            * `romantic` - Romantic
            * `playful` - Playful
            * `reserved` - Reserved
          nullable: true
        hobbies:
          type: object
          description: List of hobbies and interests
        interests:
          type: object
          description: List of general interests
        marriage_plans:
          enum:
          - 'yes'
          - 'no'
          - maybe
          - ''
          - null
          type: string
          description: |-
            * `yes` - Yes
            * `no` - No
            * `maybe` - Maybe
          nullable: true
        kids_plans:
          enum:
          - 'yes'
          - 'no'
          - maybe
          - ''
          - null
          type: string
          description: |-
            * `yes` - Yes
            * `no` - No
            * `maybe` - Maybe
          nullable: true
        religion_importance:
          enum:
          - very
          - somewhat
          - not_important
          - ''
          - null
          type: string
          description: |-
            * `very` - Very Important
            * `somewhat` - Somewhat Important
            * `not_important` - Not Important
          nullable: true
        religion:
          type: string
          nullable: true
          maxLength: 50
        dating_type:
          enum:
          - casual
          - serious
          - marriage
          - sugar
          - friends
          - ''
          - null
          type: string
          description: |-
            * `casual` - Casual Dating
            * `serious` - Serious Relationship
            * `marriage` - Marriage
            * `sugar` - Sugar Relationship
            * `friends` - Friends First
          nullable: true
        open_to_long_distance:
          enum:
          - 'yes'
          - 'no'
          - maybe
          - ''
          - null
          type: string
          description: |-
            * `yes` - Yes
            * `no` - No
            * `maybe` - Maybe
          nullable: true
        looking_for:
          type: string
          nullable: true
          description: Free text describing what the user is looking for
        push_notifications_enabled:
          type: boolean
          description: Enable push notifications
        email_notifications_enabled:
          type: boolean
          description: Enable email notifications
        preferred_language:
          type: string
          description: User's preferred app language
          maxLength: 10
        bondcoin_balance:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: User's Bondcoin balance
      required:
      - email
      - name
    UserRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        gender:
          type: string
          nullable: true
          maxLength: 10
        age:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 100
        is_matchmaker:
          type: boolean
        bio:
          type: string
        profile_picture:
          type: string
          format: uri
          nullable: true
          description: Main profile picture URL
          maxLength: 200
        profile_gallery:
          type: object
          description: Array of additional profile picture URLs
        education_level:
          enum:
          - high_school
          - undergrad
          - bachelors
          - masters
          - phd
          - other
          - ''
          - null
          type: string
          description: |-
            * `high_school` - High School
            * `undergrad` - Undergraduate
            * `bachelors` - Bachelor's Degree
            * `masters` - Master's Degree
            * `phd` - PhD
            * `other` - Other
          nullable: true
        height:
          type: string
          nullable: true
          description: Height in feet/inches or cm
          maxLength: 10
        zodiac_sign:
          enum:
          - aries
          - taurus
          - gemini
          - cancer
          - leo
          - virgo
          - libra
          - scorpio
          - sagittarius
          - capricorn
          - aquarius
          - pisces
          - ''
          - null
          type: string
          description: |-
            * `aries` - Aries
            * `taurus` - Taurus
            * `gemini` - Gemini
            * `cancer` - Cancer
            * `leo` - Leo
            * `virgo` - Virgo
            * `libra` - Libra
            * `scorpio` - Scorpio
            * `sagittarius` - Sagittarius
            * `capricorn` - Capricorn
            * `aquarius` - Aquarius
            * `pisces` - Pisces
          nullable: true
        languages:
          type: object
          description: Languages spoken (e.g., ['English', 'French'])
        relationship_status:
          enum:
          - single
          - divorced
          - widowed
          - separated
          - ''
          - null
          type: string
          description: |-
            * `single` - Single
            * `divorced` - Divorced
            * `widowed` - Widowed
            * `separated` - Separated
          nullable: true
        smoking_preference:
          enum:
          - never
          - occasionally
          - regularly
          - quit
          - ''
          - null
          type: string
          description: |-
            * `never` - Never
            * `occasionally` - Occasionally
            * `regularly` - Regularly
            * `quit` - Quit
          nullable: true
        drinking_preference:
          enum:
          - never
          - occasionally
          - regularly
          - quit
          - ''
          - null
          type: string
          description: |-
            * `never` - Never
            * `occasionally` - Occasionally
            * `regularly` - Regularly
            * `quit` - Quit
          nullable: true
        pet_preference:
          enum:
          - dog
          - cat
          - both
          - none
          - other
          - ''
          - null
          type: string
          description: |-
            * `dog` - Dog
            * `cat` - Cat
            * `both` - Both
            * `none` - None
            * `other` - Other
          nullable: true
        exercise_frequency:
          enum:
          - never
          - 1x_week
          - 2x_week
          - 3x_week
          - 4x_week
          - 5x_week
          - daily
          - ''
          - null
          type: string
          description: |-
            * `never` - Never
            * `1x_week` - 1x/week
            * `2x_week` - 2x/week
            * `3x_week` - 3x/week
            * `4x_week` - 4x/week
            * `5x_week` - 5x/week
            * `daily` - Daily
          nullable: true
        kids_preference:
          enum:
          - want
          - dont_want
          - have_kids
          - open
          - ''
          - null
          type: string
          description: |-
            * `want` - Want Kids
            * `dont_want` - Don't Want Kids
            * `have_kids` - Have Kids
            * `open` - Open to Kids
          nullable: true
        personality_type:
          enum:
          - INTJ
          - INTP
          - ENTJ
          - ENTP
          - INFJ
          - INFP
          - ENFJ
          - ENFP
          - ISTJ
          - ISFJ
          - ESTJ
          - ESFJ
          - ISTP
          - ISFP
          - ESTP
          - ESFP
          - ''
          - null
          type: string
          description: |-
            * `INTJ` - INTJ
            * `INTP` - INTP
            * `ENTJ` - ENTJ
            * `ENTP` - ENTP
            * `INFJ` - INFJ
            * `INFP` - INFP
            * `ENFJ` - ENFJ
            * `ENFP` - ENFP
            * `ISTJ` - ISTJ
            * `ISFJ` - ISFJ
            * `ESTJ` - ESTJ
            * `ESFJ` - ESFJ
            * `ISTP` - ISTP
            * `ISFP` - ISFP
            * `ESTP` - ESTP
            * `ESFP` - ESFP
          nullable: true
        love_language:
          enum:
          - physical_touch
          - gifts
          - quality_time
          - words_of_affirmation
          - acts_of_service
          - ''
          - null
          type: string
          description: |-
            * `physical_touch` - Physical Touch
            * `gifts` - Gifts
            * `quality_time` - Quality Time
            * `words_of_affirmation` - Words of Affirmation
            * `acts_of_service` - Acts of Service
          nullable: true
        communication_style:
          enum:
          - direct
          - romantic
          - playful
          - reserved
          - ''
          - null
          type: string
          description: |-
            * `direct` - Direct
            * `romantic` - Romantic
            * `playful` - Playful
            * `reserved` - Reserved
          nullable: true
        hobbies:
          type: object
          description: List of hobbies and interests
        interests:
          type: object
          description: List of general interests
        marriage_plans:
          enum:
          - 'yes'
          - 'no'
          - maybe
          - ''
          - null
          type: string
          description: |-
            * `yes` - Yes
            * `no` - No
            * `maybe` - Maybe
          nullable: true
        kids_plans:
          enum:
          - 'yes'
          - 'no'
          - maybe
          - ''
          - null
          type: string
          description: |-
            * `yes` - Yes
            * `no` - No
            * `maybe` - Maybe
          nullable: true
        religion_importance:
          enum:
          - very
          - somewhat
          - not_important
          - ''
          - null
          type: string
          description: |-
            * `very` - Very Important
            * `somewhat` - Somewhat Important
            * `not_important` - Not Important
          nullable: true
        religion:
          type: string
          nullable: true
          maxLength: 50
        dating_type:
          enum:
          - casual
          - serious
          - marriage
          - sugar
          - friends
          - ''
          - null
          type: string
          description: |-
            * `casual` - Casual Dating
            * `serious` - Serious Relationship
            * `marriage` - Marriage
            * `sugar` - Sugar Relationship
            * `friends` - Friends First
          nullable: true
        open_to_long_distance:
          enum:
          - 'yes'
          - 'no'
          - maybe
          - ''
          - null
          type: string
          description: |-
            * `yes` - Yes
            * `no` - No
            * `maybe` - Maybe
          nullable: true
        looking_for:
          type: string
          nullable: true
          description: Free text describing what the user is looking for
        push_notifications_enabled:
          type: boolean
          description: Enable push notifications
        email_notifications_enabled:
          type: boolean
          description: Enable email notifications
        preferred_language:
          type: string
          minLength: 1
          description: User's preferred app language
          maxLength: 10
        bondcoin_balance:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: User's Bondcoin balance
      required:
      - email
      - name
    UserSecurityQuestion:
      type: object
      description: Serializer for user security questions
      properties:
        id:
          type: integer
          readOnly: true
        question_type:
          enum:
          - data_protection
          - scam_prevention
          - relationship_guidance
          - matchmaking_evolution
          - unique_skills
          - business_service
          type: string
          description: |-
            * `data_protection` - How will you protect user data?
            * `scam_prevention` - What actions will you take if you suspect a scam or fake profile?
            * `relationship_guidance` - Do you also provide relationship guidance?
            * `matchmaking_evolution` - How do you see matchmaking evolving in the 21st century?
            * `unique_skills` - What unique skills set you apart?
            * `business_service` - Do you run matchmaking as a business or community service?
        response:
          type: string
          description: User's response to the security question
        is_public:
          type: boolean
          description: Whether this response is shown publicly
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - question_type
      - response
    UserSecurityQuestionCreate:
      type: object
      description: Serializer for creating user security question responses
      properties:
        question_type:
          enum:
          - data_protection
          - scam_prevention
          - relationship_guidance
          - matchmaking_evolution
          - unique_skills
          - business_service
          type: string
          description: |-
            * `data_protection` - How will you protect user data?
            * `scam_prevention` - What actions will you take if you suspect a scam or fake profile?
            * `relationship_guidance` - Do you also provide relationship guidance?
            * `matchmaking_evolution` - How do you see matchmaking evolving in the 21st century?
            * `unique_skills` - What unique skills set you apart?
            * `business_service` - Do you run matchmaking as a business or community service?
        response:
          type: string
          description: User's response to the security question
        is_public:
          type: boolean
          description: Whether this response is shown publicly
      required:
      - question_type
      - response
    UserSecurityQuestionCreateRequest:
      type: object
      description: Serializer for creating user security question responses
      properties:
        question_type:
          enum:
          - data_protection
          - scam_prevention
          - relationship_guidance
          - matchmaking_evolution
          - unique_skills
          - business_service
          type: string
          description: |-
            * `data_protection` - How will you protect user data?
            * `scam_prevention` - What actions will you take if you suspect a scam or fake profile?
            * `relationship_guidance` - Do you also provide relationship guidance?
            * `matchmaking_evolution` - How do you see matchmaking evolving in the 21st century?
            * `unique_skills` - What unique skills set you apart?
            * `business_service` - Do you run matchmaking as a business or community service?
        response:
          type: string
          minLength: 1
          description: User's response to the security question
        is_public:
          type: boolean
          description: Whether this response is shown publicly
      required:
      - question_type
      - response
    UserSecurityQuestionRequest:
      type: object
      description: Serializer for user security questions
      properties:
        question_type:
          enum:
          - data_protection
          - scam_prevention
          - relationship_guidance
          - matchmaking_evolution
          - unique_skills
          - business_service
          type: string
          description: |-
            * `data_protection` - How will you protect user data?
            * `scam_prevention` - What actions will you take if you suspect a scam or fake profile?
            * `relationship_guidance` - Do you also provide relationship guidance?
            * `matchmaking_evolution` - How do you see matchmaking evolving in the 21st century?
            * `unique_skills` - What unique skills set you apart?
            * `business_service` - Do you run matchmaking as a business or community service?
        response:
          type: string
          minLength: 1
          description: User's response to the security question
        is_public:
          type: boolean
          description: Whether this response is shown publicly
      required:
      - question_type
      - response
    UserSocialHandle:
      type: object
      description: Serializer for user social media handles
      properties:
        id:
          type: integer
          readOnly: true
        platform:
          enum:
          - instagram
          - twitter
          - facebook
          - linkedin
          - tiktok
          - snapchat
          - youtube
          - pinterest
          - website
          - other
          type: string
          description: |-
            Social media platform

            * `instagram` - Instagram
            * `twitter` - Twitter/X
            * `facebook` - Facebook
            * `linkedin` - LinkedIn
            * `tiktok` - TikTok
            * `snapchat` - Snapchat
            * `youtube` - YouTube
            * `pinterest` - Pinterest
            * `website` - Personal Website
            * `other` - Other
        handle:
          type: string
          description: User's handle or username on the platform
          maxLength: 100
        url:
          type: string
          format: uri
          nullable: true
          description: Optional direct URL to the profile
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - handle
      - platform
    UserSocialHandleCreate:
      type: object
      description: Serializer for creating user social media handles
      properties:
        platform:
          enum:
          - instagram
          - twitter
          - facebook
          - linkedin
          - tiktok
          - snapchat
          - youtube
          - pinterest
          - website
          - other
          type: string
          description: |-
            Social media platform

            * `instagram` - Instagram
            * `twitter` - Twitter/X
            * `facebook` - Facebook
            * `linkedin` - LinkedIn
            * `tiktok` - TikTok
            * `snapchat` - Snapchat
            * `youtube` - YouTube
            * `pinterest` - Pinterest
            * `website` - Personal Website
            * `other` - Other
        handle:
          type: string
          description: User's handle or username on the platform
          maxLength: 100
        url:
          type: string
          format: uri
          nullable: true
          description: Optional direct URL to the profile
          maxLength: 200
      required:
      - handle
      - platform
    UserSocialHandleCreateRequest:
      type: object
      description: Serializer for creating user social media handles
      properties:
        platform:
          enum:
          - instagram
          - twitter
          - facebook
          - linkedin
          - tiktok
          - snapchat
          - youtube
          - pinterest
          - website
          - other
          type: string
          description: |-
            Social media platform

            * `instagram` - Instagram
            * `twitter` - Twitter/X
            * `facebook` - Facebook
            * `linkedin` - LinkedIn
            * `tiktok` - TikTok
            * `snapchat` - Snapchat
            * `youtube` - YouTube
            * `pinterest` - Pinterest
            * `website` - Personal Website
            * `other` - Other
        handle:
          type: string
          minLength: 1
          description: User's handle or username on the platform
          maxLength: 100
        url:
          type: string
          format: uri
          nullable: true
          description: Optional direct URL to the profile
          maxLength: 200
      required:
      - handle
      - platform
    UserSocialHandleRequest:
      type: object
      description: Serializer for user social media handles
      properties:
        platform:
          enum:
          - instagram
          - twitter
          - facebook
          - linkedin
          - tiktok
          - snapchat
          - youtube
          - pinterest
          - website
          - other
          type: string
          description: |-
            Social media platform

            * `instagram` - Instagram
            * `twitter` - Twitter/X
            * `facebook` - Facebook
            * `linkedin` - LinkedIn
            * `tiktok` - TikTok
            * `snapchat` - Snapchat
            * `youtube` - YouTube
            * `pinterest` - Pinterest
            * `website` - Personal Website
            * `other` - Other
        handle:
          type: string
          minLength: 1
          description: User's handle or username on the platform
          maxLength: 100
        url:
          type: string
          format: uri
          nullable: true
          description: Optional direct URL to the profile
          maxLength: 200
      required:
      - handle
      - platform
    UserSubscription:
      type: object
      description: Serializer for user subscriptions
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
        plan_name:
          type: string
          readOnly: true
        plan_details:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPlan'
          readOnly: true
        status:
          enum:
          - active
          - expired
          - cancelled
          - pending
          type: string
          description: |-
            * `active` - Active
            * `expired` - Expired
            * `cancelled` - Cancelled
            * `pending` - Pending
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
        payment_method:
          type: string
          description: bondcoin, credit_card, etc.
          maxLength: 50
        transaction_id:
          type: string
          nullable: true
          maxLength: 255
        auto_renew:
          type: boolean
        is_active:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - end_date
      - plan
    UserSubscriptionCreate:
      type: object
      description: Serializer for creating user subscriptions
      properties:
        plan:
          type: integer
        payment_method:
          type: string
          description: bondcoin, credit_card, etc.
          maxLength: 50
        auto_renew:
          type: boolean
      required:
      - plan
    UserSubscriptionCreateRequest:
      type: object
      description: Serializer for creating user subscriptions
      properties:
        plan:
          type: integer
        payment_method:
          type: string
          minLength: 1
          description: bondcoin, credit_card, etc.
          maxLength: 50
        auto_renew:
          type: boolean
      required:
      - plan
    UserSubscriptionRequest:
      type: object
      description: Serializer for user subscriptions
      properties:
        plan:
          type: integer
        status:
          enum:
          - active
          - expired
          - cancelled
          - pending
          type: string
          description: |-
            * `active` - Active
            * `expired` - Expired
            * `cancelled` - Cancelled
            * `pending` - Pending
        end_date:
          type: string
          format: date-time
        payment_method:
          type: string
          minLength: 1
          description: bondcoin, credit_card, etc.
          maxLength: 50
        transaction_id:
          type: string
          nullable: true
          maxLength: 255
        auto_renew:
          type: boolean
      required:
      - end_date
      - plan
    VirtualGift:
      type: object
      description: Serializer for virtual gifts
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: e.g., 'Rose Charm', 'Diamond Ring'
          maxLength: 100
        category:
          type: integer
        category_name:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
        icon_url:
          type: string
          format: uri
          description: URL to gift icon/image
          maxLength: 200
        cost_bondcoins:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Cost in Bondcoins
        is_popular:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - cost_bondcoins
      - icon_url
      - name
    Waitlist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - email
    WaitlistRequest:
      type: object
      properties:
        firstName:
          type: string
          writeOnly: true
          minLength: 1
        lastName:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
      required:
      - email
      - firstName
      - lastName
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
tags:
- name: Authentication
  description: User authentication and OAuth endpoints
- name: User Management
  description: User profiles, settings, and account management
- name: Chat & Messaging
  description: Real-time chat, voice/video calls, and messaging
- name: Social Feed
  description: Posts, stories, comments, and social interactions
- name: Live Streaming
  description: Live sessions, audience interaction, and streaming
- name: Matching & Discovery
  description: User search, recommendations, and matching
- name: Location Services
  description: Location tracking, nearby users, and geo features
- name: Monetization
  description: Subscriptions, payments, and virtual currency
- name: Virtual Gifting
  description: Virtual gifts, transactions, and gifting features
- name: Verification
  description: Document verification, facial recognition, OTP
- name: Admin
  description: Administrative endpoints and management
- name: Translation
  description: Multi-language support and translation services
